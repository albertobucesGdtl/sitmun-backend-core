plugins {
  id('org.springframework.boot') version '2.4.3'
  id('java')
  id('io.spring.dependency-management') version '1.0.11.RELEASE'

  id('maven-publish')
  id('org.ajoberstar.git-publish') version '2.1.3'

  id("com.github.johnrengelman.processes") version "0.5.0"
  id("org.springdoc.openapi-gradle-plugin") version "1.3.0"

  id("io.freefair.lombok") version "5.3.0"
  id('jacoco')
}

def targetJavaVersion = JavaVersion.VERSION_1_8
sourceCompatibility = "${targetJavaVersion}"
targetCompatibility = "${targetJavaVersion}"

configurations {
  annotationProcessor.extendsFrom implementation
}

dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-data-rest'
  implementation 'org.springframework.data:spring-data-rest-hal-explorer'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-security'
  implementation 'org.springframework.boot:spring-boot-starter-validation'
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.security:spring-security-data'

  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

  implementation 'com.fasterxml.jackson.datatype:jackson-datatype-hibernate5'

  annotationProcessor 'com.querydsl:querydsl-apt::jpa'
  implementation 'com.querydsl:querydsl-jpa'

  implementation 'org.liquibase:liquibase-core'

  implementation "org.springdoc:springdoc-openapi-ui:${springdoc_openapi_version}"
  implementation "org.springdoc:springdoc-openapi-data-rest:${springdoc_openapi_version}"
  implementation "org.springdoc:springdoc-openapi-security:${springdoc_openapi_version}"
  implementation "org.springdoc:springdoc-openapi-hateoas:${springdoc_openapi_version}"

  implementation 'com.zaxxer:HikariCP'

  implementation "info.picocli:picocli:${picocli_version}"

  implementation "io.jsonwebtoken:jjwt:${jjwt_version}"

  implementation 'org.reflections:reflections:0.9.12'
  implementation 'com.h2database:h2'

  implementation platform("com.squareup.okhttp3:okhttp-bom:${okhttp_version}")
  implementation 'com.squareup.okhttp3:okhttp'
  implementation 'com.squareup.okhttp3:logging-interceptor'
  implementation 'org.json:json:20210307'

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: "com.vaadin.external.google", module: "android-json"
  }
  testImplementation 'org.springframework.security:spring-security-test'
  testImplementation "org.assertj:assertj-core:${assertj_core_version}"
  testImplementation "com.google.guava:guava:${guava_version}"
}

publishing {
  repositories {
    maven {
      name = 'GitHubPackages'
      url = uri('https://maven.pkg.github.com/sitmun/sitmun-backend-core')
      credentials {
        username = project.findProperty('gpr.user') ?: System.getenv('USERNAME')
        password = project.findProperty('gpr.key') ?: System.getenv('GITHUB_API_KEY')
      }
    }
  }
  publications {
    gpr(MavenPublication) {
      from(components.java)
    }
  }
}

def cacheDir = project.hasProperty('cacheDir') ? project.properties.cacheDir : "${project.buildDir}"

task install(dependsOn: 'publishToMavenLocal')

clean {
  delete 'dist'
  delete "${cacheDir}"
}


jacocoTestReport {
  reports {
    xml.enabled true
  }
}

test.finalizedBy jacocoTestReport