plugins {
  id 'java'
  id 'com.heroku.sdk.heroku-gradle' version '2.0.0'
  id 'jacoco'
  id 'org.sonarqube' version '3.3'

  id 'com.github.node-gradle.node' version '3.0.1' apply false

  id 'org.springframework.boot' version '2.4.3' apply false
  id 'io.spring.dependency-management' version '1.0.11.RELEASE' apply false

  id 'org.ajoberstar.git-publish' version '2.1.3' apply false

  id 'com.github.johnrengelman.processes' version '0.5.0' apply false
  id 'org.springdoc.openapi-gradle-plugin' version '1.3.0' apply false

  id 'io.freefair.lombok' version '6.4.3.1' apply false

  id 'com.google.cloud.tools.jib' version '3.3.1' apply false

  id 'application'
}

subprojects {
  group = 'org.sitmun'

  def targetJavaVersion = JavaVersion.VERSION_11
  sourceCompatibility = "${targetJavaVersion}"
  targetCompatibility = "${targetJavaVersion}"

  repositories {
    mavenLocal()
    mavenCentral()
  }

}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Stage task:
// - build app module
// - do not run tests
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

tasks.register('stage') {
  dependsOn ':processResources', ':deploy:heroku-dev-full:build'
}

gradle.taskGraph.whenReady { taskGraph ->
  if (taskGraph.hasTask(stage)) {
    subprojects {
      test.enabled = false
    }
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Heroku deployment:
// - contributes the task deployHeroku
// - expects the stage task has been successfully executed
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

heroku {
  def procFile = ["web": "java -Dserver.port=\$PORT \$JAVA_OPTS -jar sitmun.jar"]
  appName = "sitmun-backend-core"
  includes = ["sitmun.jar"]
  includeBuildDir = false
  processTypes(procFile)
}

tasks.named("deployHeroku") {
  it.dependsOn 'stage'
  it.doFirst {
    copy {
      from "deploy/heroku-dev-full/build/libs/heroku-dev-full-${version}.jar"
      into "."
      rename "heroku-dev-full-${version}.jar", "sitmun.jar"
    }
  }
  it.doLast {
    delete "sitmun.jar"
  }
}

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// QA
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

subprojects {
  apply plugin: 'org.sonarqube'

  tasks.withType(Test).configureEach {
    useJUnitPlatform()
    maxHeapSize = '1G'
  }
}

apply from: "$project.rootDir/sonar.gradle"


////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Run as local
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

tasks.register('herokuDevLocal', JavaExec) {
  dependsOn 'stage'
  group = "Run"
  description = "Run as local the Heroku deployment"
  classpath = files("deploy/heroku-dev-full/build/libs/heroku-dev-full-${version}.jar")
}
