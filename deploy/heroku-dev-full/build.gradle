////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Project deploy heroku-dev-full
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
  id 'java'
  id 'org.springframework.boot'
  id 'io.spring.dependency-management'
  id 'io.freefair.lombok'
  id 'jacoco'

  id 'com.google.cloud.tools.jib'
}

dependencyManagement {
  imports {
    mavenBom SpringBootPlugin.BOM_COORDINATES
  }
}

dependencies {
  implementation project(':app')
  implementation project(':legacy')

  implementation 'org.postgresql:postgresql'

  testImplementation project(':common')

  testImplementation('org.springframework.boot:spring-boot-starter-test') {
    exclude group: "com.vaadin.external.google", module: "android-json"
  }
  testImplementation 'org.springframework.boot:spring-boot-starter-data-rest'
  testImplementation 'org.springframework.security:spring-security-test'

  testImplementation 'org.hibernate:hibernate-core'
  testImplementation 'com.fasterxml.jackson.core:jackson-databind'
  testImplementation 'com.querydsl:querydsl-jpa'

  testImplementation "org.assertj:assertj-core:${assertj_core_version}"
  testImplementation "org.json:json:${json_version}"
}

bootJar {
  mainClass = 'org.sitmun.Application'
}

jacocoTestReport {
  reports {
    xml.enabled true
  }
}

test.finalizedBy jacocoTestReport

test.dependsOn(":app:bootJar")

bootJar.dependsOn(":app:bootJar")

jib {
  from {
    image = 'amazoncorretto:11'
  }
  to {
    image = "${name}:latest"
  }
  container {
    mainClass = 'org.sitmun.Application'
  }
}
