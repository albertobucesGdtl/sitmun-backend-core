openapi: 3.0.1
info:
  title: SITMUN Core API
  description: |
    Configuration manager of SITMUN applications.<br/><br/>
    **Note**: In active development.
  version: 3.0-SNAPSHOT
servers:
  - url: /
    description: Generated server url
security:
  - bearerAuth: [ ]
tags:
  - name: workspace
    description: workspace
  - name: authentication
    description: authentication with JWT
  - name: account
    description: user account management
paths:
  /api/account:
    get:
      tags:
        - account
      operationId: getAccount
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User'
    put:
      tags:
        - account
      operationId: saveAccount
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/User'
  /api/authenticate:
    post:
      tags:
        - authentication
      operationId: authenticateUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/JWTToken'
      security: [ ]
  /api/workspace:
    get:
      tags:
        - workspace
      operationId: getDescription
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/Workspace_View'
  /api/workspace/application/{applicationId}/territory/{territoryId}:
    get:
      tags:
        - workspace
      operationId: getDescription_1
      parameters:
        - name: applicationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: territoryId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/json;charset=UTF-8:
              schema:
                $ref: '#/components/schemas/WorkspaceApplication_View'
  /api/application-backgrounds:
    get:
      tags:
        - application background
      description: get-applicationbackground
      operationId: getCollectionResource-applicationbackground-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplicationBackground'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplicationBackground'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplicationBackground'
    post:
      tags:
        - application background
      description: create-applicationbackground
      operationId: postCollectionResource-applicationbackground-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationBackground'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationBackground'
  /api/application-backgrounds/{id}:
    get:
      tags:
        - application background
      description: get-applicationbackground
      operationId: getItemResource-applicationbackground-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationBackground'
        "404":
          description: Not Found
    put:
      tags:
        - application background
      description: update-applicationbackground
      operationId: putItemResource-applicationbackground-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationBackground'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationBackground'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationBackground'
        "204":
          description: No Content
    delete:
      tags:
        - application background
      description: delete-applicationbackground
      operationId: deleteItemResource-applicationbackground-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application background
      description: patch-applicationbackground
      operationId: patchItemResource-applicationbackground-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationBackground'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationBackground'
        "204":
          description: No Content
  /api/application-backgrounds/{id}/application:
    get:
      tags:
        - application background
      description: get-application-by-applicationbackground-Id
      operationId: followPropertyReference-applicationbackground-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    put:
      tags:
        - application background
      description: update-application-by-applicationbackground-Id
      operationId: createPropertyReference-applicationbackground-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
    delete:
      tags:
        - application background
      description: delete-application-by-applicationbackground-Id
      operationId: deletePropertyReference-applicationbackground-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application background
      description: patch-application-by-applicationbackground-Id
      operationId: createPropertyReference-applicationbackground-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
  /api/application-backgrounds/{id}/application/{propertyId}:
    get:
      tags:
        - application background
      description: get-application-by-applicationbackground-Id
      operationId: followPropertyReference-applicationbackground-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    delete:
      tags:
        - application background
      description: delete-application-by-applicationbackground-Id
      operationId: deletePropertyReferenceId-applicationbackground-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/application-backgrounds/{id}/background:
    get:
      tags:
        - application background
      description: get-background-by-applicationbackground-Id
      operationId: followPropertyReference-applicationbackground-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "404":
          description: Not Found
    put:
      tags:
        - application background
      description: update-background-by-applicationbackground-Id
      operationId: createPropertyReference-applicationbackground-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "204":
          description: No Content
    delete:
      tags:
        - application background
      description: delete-background-by-applicationbackground-Id
      operationId: deletePropertyReference-applicationbackground-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application background
      description: patch-background-by-applicationbackground-Id
      operationId: createPropertyReference-applicationbackground-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "204":
          description: No Content
  /api/application-backgrounds/{id}/background/{propertyId}:
    get:
      tags:
        - application background
      description: get-background-by-applicationbackground-Id
      operationId: followPropertyReference-applicationbackground-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "404":
          description: Not Found
    delete:
      tags:
        - application background
      description: delete-background-by-applicationbackground-Id
      operationId: deletePropertyReferenceId-applicationbackground-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/application-parameters:
    get:
      tags:
        - application parameter
      description: get-applicationparameter
      operationId: getCollectionResource-applicationparameter-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplicationParameter'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplicationParameter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplicationParameter'
    post:
      tags:
        - application parameter
      description: create-applicationparameter
      operationId: postCollectionResource-applicationparameter-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationParameter'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationParameter'
  /api/application-parameters/{id}:
    get:
      tags:
        - application parameter
      description: get-applicationparameter
      operationId: getItemResource-applicationparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationParameter'
        "404":
          description: Not Found
    put:
      tags:
        - application parameter
      description: update-applicationparameter
      operationId: putItemResource-applicationparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationParameter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationParameter'
        "204":
          description: No Content
    delete:
      tags:
        - application parameter
      description: delete-applicationparameter
      operationId: deleteItemResource-applicationparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application parameter
      description: patch-applicationparameter
      operationId: patchItemResource-applicationparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplicationParameter'
        "204":
          description: No Content
  /api/application-parameters/{id}/application:
    get:
      tags:
        - application parameter
      description: get-application-by-applicationparameter-Id
      operationId: followPropertyReference-applicationparameter-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    put:
      tags:
        - application parameter
      description: update-application-by-applicationparameter-Id
      operationId: createPropertyReference-applicationparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
    delete:
      tags:
        - application parameter
      description: delete-application-by-applicationparameter-Id
      operationId: deletePropertyReference-applicationparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application parameter
      description: patch-application-by-applicationparameter-Id
      operationId: createPropertyReference-applicationparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
  /api/application-parameters/{id}/application/{propertyId}:
    get:
      tags:
        - application parameter
      description: get-application-by-applicationparameter-Id
      operationId: followPropertyReference-applicationparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    delete:
      tags:
        - application parameter
      description: delete-application-by-applicationparameter-Id
      operationId: deletePropertyReferenceId-applicationparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/applications:
    get:
      tags:
        - application
      description: get-application
      operationId: getCollectionResource-application-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplication'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplication'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelApplication'
    post:
      tags:
        - application
      description: create-application
      operationId: postCollectionResource-application-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
  /api/applications/{id}:
    get:
      tags:
        - application
      description: get-application
      operationId: getItemResource-application-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    put:
      tags:
        - application
      description: update-application
      operationId: putItemResource-application-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
    delete:
      tags:
        - application
      description: delete-application
      operationId: deleteItemResource-application-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application
      description: patch-application
      operationId: patchItemResource-application-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Application'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
  /api/applications/{id}/availableRoles:
    get:
      tags:
        - application
      description: get-role-by-application-Id
      operationId: followPropertyReference-application-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "404":
          description: Not Found
    put:
      tags:
        - application
      description: update-role-by-application-Id
      operationId: createPropertyReference-application-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "204":
          description: No Content
    delete:
      tags:
        - application
      description: delete-role-by-application-Id
      operationId: deletePropertyReference-application-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application
      description: patch-role-by-application-Id
      operationId: createPropertyReference-application-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "204":
          description: No Content
  /api/applications/{id}/availableRoles/{propertyId}:
    get:
      tags:
        - application
      description: get-role-by-application-Id
      operationId: followPropertyReference-application-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "404":
          description: Not Found
    delete:
      tags:
        - application
      description: delete-role-by-application-Id
      operationId: deletePropertyReferenceId-application-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/applications/{id}/backgrounds:
    get:
      tags:
        - application
      description: get-applicationbackground-by-application-Id
      operationId: followPropertyReference-application-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "404":
          description: Not Found
    put:
      tags:
        - application
      description: update-applicationbackground-by-application-Id
      operationId: createPropertyReference-application-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "204":
          description: No Content
    delete:
      tags:
        - application
      description: delete-applicationbackground-by-application-Id
      operationId: deletePropertyReference-application-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application
      description: patch-applicationbackground-by-application-Id
      operationId: createPropertyReference-application-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "204":
          description: No Content
  /api/applications/{id}/backgrounds/{propertyId}:
    get:
      tags:
        - application
      description: get-applicationbackground-by-application-Id
      operationId: followPropertyReference-application-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "404":
          description: Not Found
    delete:
      tags:
        - application
      description: delete-applicationbackground-by-application-Id
      operationId: deletePropertyReferenceId-application-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/applications/{id}/parameters:
    get:
      tags:
        - application
      description: get-applicationparameter-by-application-Id
      operationId: followPropertyReference-application-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationParameter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationParameter'
        "404":
          description: Not Found
    put:
      tags:
        - application
      description: update-applicationparameter-by-application-Id
      operationId: createPropertyReference-application-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationParameter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationParameter'
        "204":
          description: No Content
    delete:
      tags:
        - application
      description: delete-applicationparameter-by-application-Id
      operationId: deletePropertyReference-application-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application
      description: patch-applicationparameter-by-application-Id
      operationId: createPropertyReference-application-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationParameter'
        "204":
          description: No Content
  /api/applications/{id}/parameters/{propertyId}:
    get:
      tags:
        - application
      description: get-applicationparameter-by-application-Id
      operationId: followPropertyReference-application-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationParameter'
        "404":
          description: Not Found
    delete:
      tags:
        - application
      description: delete-applicationparameter-by-application-Id
      operationId: deletePropertyReferenceId-application-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/applications/{id}/situationMap:
    get:
      tags:
        - application
      description: get-cartographypermission-by-application-Id
      operationId: followPropertyReference-application-get_4_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "404":
          description: Not Found
    put:
      tags:
        - application
      description: update-cartographypermission-by-application-Id
      operationId: createPropertyReference-application-put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "204":
          description: No Content
    delete:
      tags:
        - application
      description: delete-cartographypermission-by-application-Id
      operationId: deletePropertyReference-application-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application
      description: patch-cartographypermission-by-application-Id
      operationId: createPropertyReference-application-patch_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "204":
          description: No Content
  /api/applications/{id}/situationMap/{propertyId}:
    get:
      tags:
        - application
      description: get-cartographypermission-by-application-Id
      operationId: followPropertyReference-application-get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "404":
          description: Not Found
    delete:
      tags:
        - application
      description: delete-cartographypermission-by-application-Id
      operationId: deletePropertyReferenceId-application-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/applications/{id}/trees:
    get:
      tags:
        - application
      description: get-tree-by-application-Id
      operationId: followPropertyReference-application-get_5_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "404":
          description: Not Found
    put:
      tags:
        - application
      description: update-tree-by-application-Id
      operationId: createPropertyReference-application-put_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "204":
          description: No Content
    delete:
      tags:
        - application
      description: delete-tree-by-application-Id
      operationId: deletePropertyReference-application-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - application
      description: patch-tree-by-application-Id
      operationId: createPropertyReference-application-patch_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "204":
          description: No Content
  /api/applications/{id}/trees/{propertyId}:
    get:
      tags:
        - application
      description: get-tree-by-application-Id
      operationId: followPropertyReference-application-get_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "404":
          description: Not Found
    delete:
      tags:
        - application
      description: delete-tree-by-application-Id
      operationId: deletePropertyReferenceId-application-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/backgrounds:
    get:
      tags:
        - background
      description: get-background
      operationId: getCollectionResource-background-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelBackground'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelBackground'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelBackground'
    post:
      tags:
        - background
      description: create-background
      operationId: postCollectionResource-background-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
  /api/backgrounds/{id}:
    get:
      tags:
        - background
      description: get-background
      operationId: getItemResource-background-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "404":
          description: Not Found
    put:
      tags:
        - background
      description: update-background
      operationId: putItemResource-background-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "204":
          description: No Content
    delete:
      tags:
        - background
      description: delete-background
      operationId: deleteItemResource-background-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - background
      description: patch-background
      operationId: patchItemResource-background-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Background'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelBackground'
        "204":
          description: No Content
  /api/backgrounds/{id}/backgrounds:
    get:
      tags:
        - background
      description: get-applicationbackground-by-background-Id
      operationId: followPropertyReference-background-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "404":
          description: Not Found
    put:
      tags:
        - background
      description: update-applicationbackground-by-background-Id
      operationId: createPropertyReference-background-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "204":
          description: No Content
    delete:
      tags:
        - background
      description: delete-applicationbackground-by-background-Id
      operationId: deletePropertyReference-background-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - background
      description: patch-applicationbackground-by-background-Id
      operationId: createPropertyReference-background-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "204":
          description: No Content
  /api/backgrounds/{id}/backgrounds/{propertyId}:
    get:
      tags:
        - background
      description: get-applicationbackground-by-background-Id
      operationId: followPropertyReference-background-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplicationBackground'
        "404":
          description: Not Found
    delete:
      tags:
        - background
      description: delete-applicationbackground-by-background-Id
      operationId: deletePropertyReferenceId-background-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/backgrounds/{id}/cartographyGroup:
    get:
      tags:
        - background
      description: get-cartographypermission-by-background-Id
      operationId: followPropertyReference-background-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "404":
          description: Not Found
    put:
      tags:
        - background
      description: update-cartographypermission-by-background-Id
      operationId: createPropertyReference-background-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "204":
          description: No Content
    delete:
      tags:
        - background
      description: delete-cartographypermission-by-background-Id
      operationId: deletePropertyReference-background-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - background
      description: patch-cartographypermission-by-background-Id
      operationId: createPropertyReference-background-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "204":
          description: No Content
  /api/backgrounds/{id}/cartographyGroup/{propertyId}:
    get:
      tags:
        - background
      description: get-cartographypermission-by-background-Id
      operationId: followPropertyReference-background-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "404":
          description: Not Found
    delete:
      tags:
        - background
      description: delete-cartographypermission-by-background-Id
      operationId: deletePropertyReferenceId-background-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies:
    get:
      tags:
        - cartography
      description: get-cartography
      operationId: getCollectionResource-cartography-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartography'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartography'
    post:
      tags:
        - cartography
      description: create-cartography
      operationId: postCollectionResource-cartography-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cartography'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
  /api/cartographies/search/available:
    get:
      tags:
        - cartography
      operationId: executeSearch-cartography-get
      parameters:
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "404":
          description: Not Found
  /api/cartographies/search/cartographiesByCreatedDateSinceDate:
    get:
      tags:
        - cartography
      operationId: executeSearch-cartography-get_1
      parameters:
        - name: sinceDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "404":
          description: Not Found
  /api/cartographies/search/findOneWithEagerRelationships:
    get:
      tags:
        - cartography
      operationId: executeSearch-cartography-get_2
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
  /api/cartographies/{id}:
    get:
      tags:
        - cartography
      description: get-cartography
      operationId: getItemResource-cartography-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-cartography
      operationId: putItemResource-cartography-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cartography'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-cartography
      operationId: deleteItemResource-cartography-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-cartography
      operationId: patchItemResource-cartography-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Cartography'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/cartographies/{id}/availabilities:
    get:
      tags:
        - cartography
      description: get-cartographyavailability-by-cartography-Id
      operationId: followPropertyReference-cartography-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-cartographyavailability-by-cartography-Id
      operationId: createPropertyReference-cartography-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-cartographyavailability-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-cartographyavailability-by-cartography-Id
      operationId: createPropertyReference-cartography-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "204":
          description: No Content
  /api/cartographies/{id}/availabilities/{propertyId}:
    get:
      tags:
        - cartography
      description: get-cartographyavailability-by-cartography-Id
      operationId: followPropertyReference-cartography-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-cartographyavailability-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/defaultStyle:
    get:
      tags:
        - cartography
      description: get-cartographystyle-by-cartography-Id
      operationId: followPropertyReference-cartography-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-cartographystyle-by-cartography-Id
      operationId: createPropertyReference-cartography-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-cartographystyle-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-cartographystyle-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "204":
          description: No Content
  /api/cartographies/{id}/defaultStyle/{propertyId}:
    get:
      tags:
        - cartography
      description: get-cartographystyle-by-cartography-Id
      operationId: followPropertyReference-cartography-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-cartographystyle-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/filters:
    get:
      tags:
        - cartography
      description: get-cartographyfilter-by-cartography-Id
      operationId: followPropertyReference-cartography-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyFilter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyFilter'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-cartographyfilter-by-cartography-Id
      operationId: createPropertyReference-cartography-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyFilter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyFilter'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-cartographyfilter-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-cartographyfilter-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyFilter'
        "204":
          description: No Content
  /api/cartographies/{id}/filters/{propertyId}:
    get:
      tags:
        - cartography
      description: get-cartographyfilter-by-cartography-Id
      operationId: followPropertyReference-cartography-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyFilter'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-cartographyfilter-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/parameters:
    get:
      tags:
        - cartography
      description: get-cartographyparameter-by-cartography-Id
      operationId: followPropertyReference-cartography-get_4_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyParameter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyParameter'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-cartographyparameter-by-cartography-Id
      operationId: createPropertyReference-cartography-put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyParameter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyParameter'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-cartographyparameter-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-cartographyparameter-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyParameter'
        "204":
          description: No Content
  /api/cartographies/{id}/parameters/{propertyId}:
    get:
      tags:
        - cartography
      description: get-cartographyparameter-by-cartography-Id
      operationId: followPropertyReference-cartography-get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyParameter'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-cartographyparameter-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/permissions:
    get:
      tags:
        - cartography
      description: get-cartographypermission-by-cartography-Id
      operationId: followPropertyReference-cartography-get_5_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-cartographypermission-by-cartography-Id
      operationId: createPropertyReference-cartography-put_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-cartographypermission-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-cartographypermission-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "204":
          description: No Content
  /api/cartographies/{id}/permissions/{propertyId}:
    get:
      tags:
        - cartography
      description: get-cartographypermission-by-cartography-Id
      operationId: followPropertyReference-cartography-get_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-cartographypermission-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/service:
    get:
      tags:
        - cartography
      description: get-service-by-cartography-Id
      operationId: followPropertyReference-cartography-get_6_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-service-by-cartography-Id
      operationId: createPropertyReference-cartography-put_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-service-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-service-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
  /api/cartographies/{id}/service/{propertyId}:
    get:
      tags:
        - cartography
      description: get-service-by-cartography-Id
      operationId: followPropertyReference-cartography-get_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-service-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/spatialSelectionConnection:
    get:
      tags:
        - cartography
      description: get-databaseconnection-by-cartography-Id
      operationId: followPropertyReference-cartography-get_7_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-databaseconnection-by-cartography-Id
      operationId: createPropertyReference-cartography-put_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-databaseconnection-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-databaseconnection-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "204":
          description: No Content
  /api/cartographies/{id}/spatialSelectionConnection/{propertyId}:
    get:
      tags:
        - cartography
      description: get-databaseconnection-by-cartography-Id
      operationId: followPropertyReference-cartography-get_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-databaseconnection-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/spatialSelectionService:
    get:
      tags:
        - cartography
      description: get-service-by-cartography-Id
      operationId: followPropertyReference-cartography-get_8_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-service-by-cartography-Id
      operationId: createPropertyReference-cartography-put_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-service-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-service-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
  /api/cartographies/{id}/spatialSelectionService/{propertyId}:
    get:
      tags:
        - cartography
      description: get-service-by-cartography-Id
      operationId: followPropertyReference-cartography-get_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-service-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/styles:
    get:
      tags:
        - cartography
      description: get-cartographystyle-by-cartography-Id
      operationId: followPropertyReference-cartography-get_9_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyStyle'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyStyle'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-cartographystyle-by-cartography-Id
      operationId: createPropertyReference-cartography-put_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyStyle'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyStyle'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-cartographystyle-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-cartographystyle-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyStyle'
        "204":
          description: No Content
  /api/cartographies/{id}/styles/{propertyId}:
    get:
      tags:
        - cartography
      description: get-cartographystyle-by-cartography-Id
      operationId: followPropertyReference-cartography-get_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyStyle'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-cartographystyle-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartographies/{id}/treeNodes:
    get:
      tags:
        - cartography
      description: get-treenode-by-cartography-Id
      operationId: followPropertyReference-cartography-get_10_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "404":
          description: Not Found
    put:
      tags:
        - cartography
      description: update-treenode-by-cartography-Id
      operationId: createPropertyReference-cartography-put_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "204":
          description: No Content
    delete:
      tags:
        - cartography
      description: delete-treenode-by-cartography-Id
      operationId: deletePropertyReference-cartography-delete_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography
      description: patch-treenode-by-cartography-Id
      operationId: createPropertyReference-cartography-patch_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "204":
          description: No Content
  /api/cartographies/{id}/treeNodes/{propertyId}:
    get:
      tags:
        - cartography
      description: get-treenode-by-cartography-Id
      operationId: followPropertyReference-cartography-get_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography
      description: delete-treenode-by-cartography-Id
      operationId: deletePropertyReferenceId-cartography-delete_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-availabilities:
    get:
      tags:
        - cartography availability
      description: get-cartographyavailability
      operationId: getCollectionResource-cartographyavailability-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyAvailability'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyAvailability'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyAvailability'
    post:
      tags:
        - cartography availability
      description: create-cartographyavailability
      operationId: postCollectionResource-cartographyavailability-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyAvailability'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyAvailability'
  /api/cartography-availabilities/{id}:
    get:
      tags:
        - cartography availability
      description: get-cartographyavailability
      operationId: getItemResource-cartographyavailability-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyAvailability'
        "404":
          description: Not Found
    put:
      tags:
        - cartography availability
      description: update-cartographyavailability
      operationId: putItemResource-cartographyavailability-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyAvailability'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyAvailability'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyAvailability'
        "204":
          description: No Content
    delete:
      tags:
        - cartography availability
      description: delete-cartographyavailability
      operationId: deleteItemResource-cartographyavailability-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography availability
      description: patch-cartographyavailability
      operationId: patchItemResource-cartographyavailability-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyAvailability'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyAvailability'
        "204":
          description: No Content
  /api/cartography-availabilities/{id}/cartography:
    get:
      tags:
        - cartography availability
      description: get-cartography-by-cartographyavailability-Id
      operationId: followPropertyReference-cartographyavailability-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - cartography availability
      description: update-cartography-by-cartographyavailability-Id
      operationId: createPropertyReference-cartographyavailability-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - cartography availability
      description: delete-cartography-by-cartographyavailability-Id
      operationId: deletePropertyReference-cartographyavailability-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography availability
      description: patch-cartography-by-cartographyavailability-Id
      operationId: createPropertyReference-cartographyavailability-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/cartography-availabilities/{id}/cartography/{propertyId}:
    get:
      tags:
        - cartography availability
      description: get-cartography-by-cartographyavailability-Id
      operationId: followPropertyReference-cartographyavailability-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography availability
      description: delete-cartography-by-cartographyavailability-Id
      operationId: deletePropertyReferenceId-cartographyavailability-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-availabilities/{id}/territory:
    get:
      tags:
        - cartography availability
      description: get-territory-by-cartographyavailability-Id
      operationId: followPropertyReference-cartographyavailability-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    put:
      tags:
        - cartography availability
      description: update-territory-by-cartographyavailability-Id
      operationId: createPropertyReference-cartographyavailability-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
    delete:
      tags:
        - cartography availability
      description: delete-territory-by-cartographyavailability-Id
      operationId: deletePropertyReference-cartographyavailability-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography availability
      description: patch-territory-by-cartographyavailability-Id
      operationId: createPropertyReference-cartographyavailability-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
  /api/cartography-availabilities/{id}/territory/{propertyId}:
    get:
      tags:
        - cartography availability
      description: get-territory-by-cartographyavailability-Id
      operationId: followPropertyReference-cartographyavailability-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography availability
      description: delete-territory-by-cartographyavailability-Id
      operationId: deletePropertyReferenceId-cartographyavailability-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-filters:
    get:
      tags:
        - cartography filter
      description: get-cartographyfilter
      operationId: getCollectionResource-cartographyfilter-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyFilter'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyFilter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyFilter'
    post:
      tags:
        - cartography filter
      description: create-cartographyfilter
      operationId: postCollectionResource-cartographyfilter-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyFilter'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyFilter'
  /api/cartography-filters/{id}:
    get:
      tags:
        - cartography filter
      description: get-cartographyfilter
      operationId: getItemResource-cartographyfilter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyFilter'
        "404":
          description: Not Found
    put:
      tags:
        - cartography filter
      description: update-cartographyfilter
      operationId: putItemResource-cartographyfilter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyFilter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyFilter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyFilter'
        "204":
          description: No Content
    delete:
      tags:
        - cartography filter
      description: delete-cartographyfilter
      operationId: deleteItemResource-cartographyfilter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography filter
      description: patch-cartographyfilter
      operationId: patchItemResource-cartographyfilter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyFilter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyFilter'
        "204":
          description: No Content
  /api/cartography-filters/{id}/cartography:
    get:
      tags:
        - cartography filter
      description: get-cartography-by-cartographyfilter-Id
      operationId: followPropertyReference-cartographyfilter-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - cartography filter
      description: update-cartography-by-cartographyfilter-Id
      operationId: createPropertyReference-cartographyfilter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - cartography filter
      description: delete-cartography-by-cartographyfilter-Id
      operationId: deletePropertyReference-cartographyfilter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography filter
      description: patch-cartography-by-cartographyfilter-Id
      operationId: createPropertyReference-cartographyfilter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/cartography-filters/{id}/cartography/{propertyId}:
    get:
      tags:
        - cartography filter
      description: get-cartography-by-cartographyfilter-Id
      operationId: followPropertyReference-cartographyfilter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography filter
      description: delete-cartography-by-cartographyfilter-Id
      operationId: deletePropertyReferenceId-cartographyfilter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-filters/{id}/territorialLevel:
    get:
      tags:
        - cartography filter
      description: get-territorytype-by-cartographyfilter-Id
      operationId: followPropertyReference-cartographyfilter-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "404":
          description: Not Found
    put:
      tags:
        - cartography filter
      description: update-territorytype-by-cartographyfilter-Id
      operationId: createPropertyReference-cartographyfilter-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "204":
          description: No Content
    delete:
      tags:
        - cartography filter
      description: delete-territorytype-by-cartographyfilter-Id
      operationId: deletePropertyReference-cartographyfilter-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography filter
      description: patch-territorytype-by-cartographyfilter-Id
      operationId: createPropertyReference-cartographyfilter-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "204":
          description: No Content
  /api/cartography-filters/{id}/territorialLevel/{propertyId}:
    get:
      tags:
        - cartography filter
      description: get-territorytype-by-cartographyfilter-Id
      operationId: followPropertyReference-cartographyfilter-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography filter
      description: delete-territorytype-by-cartographyfilter-Id
      operationId: deletePropertyReferenceId-cartographyfilter-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-groups:
    get:
      tags:
        - cartography group
      description: get-cartographypermission
      operationId: getCollectionResource-cartographypermission-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyPermission'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyPermission'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyPermission'
    post:
      tags:
        - cartography group
      description: create-cartographypermission
      operationId: postCollectionResource-cartographypermission-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyPermission'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
  /api/cartography-groups/{id}:
    get:
      tags:
        - cartography group
      description: get-cartographypermission
      operationId: getItemResource-cartographypermission-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "404":
          description: Not Found
    put:
      tags:
        - cartography group
      description: update-cartographypermission
      operationId: putItemResource-cartographypermission-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyPermission'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "204":
          description: No Content
    delete:
      tags:
        - cartography group
      description: delete-cartographypermission
      operationId: deleteItemResource-cartographypermission-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography group
      description: patch-cartographypermission
      operationId: patchItemResource-cartographypermission-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyPermission'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        "204":
          description: No Content
  /api/cartography-groups/{id}/applications:
    get:
      tags:
        - cartography group
      description: get-application-by-cartographypermission-Id
      operationId: followPropertyReference-cartographypermission-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "404":
          description: Not Found
    put:
      tags:
        - cartography group
      description: update-application-by-cartographypermission-Id
      operationId: createPropertyReference-cartographypermission-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "204":
          description: No Content
    delete:
      tags:
        - cartography group
      description: delete-application-by-cartographypermission-Id
      operationId: deletePropertyReference-cartographypermission-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography group
      description: patch-application-by-cartographypermission-Id
      operationId: createPropertyReference-cartographypermission-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "204":
          description: No Content
  /api/cartography-groups/{id}/applications/{propertyId}:
    get:
      tags:
        - cartography group
      description: get-application-by-cartographypermission-Id
      operationId: followPropertyReference-cartographypermission-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography group
      description: delete-application-by-cartographypermission-Id
      operationId: deletePropertyReferenceId-cartographypermission-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-groups/{id}/backgrounds:
    get:
      tags:
        - cartography group
      description: get-background-by-cartographypermission-Id
      operationId: followPropertyReference-cartographypermission-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelBackground'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelBackground'
        "404":
          description: Not Found
    put:
      tags:
        - cartography group
      description: update-background-by-cartographypermission-Id
      operationId: createPropertyReference-cartographypermission-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelBackground'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelBackground'
        "204":
          description: No Content
    delete:
      tags:
        - cartography group
      description: delete-background-by-cartographypermission-Id
      operationId: deletePropertyReference-cartographypermission-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography group
      description: patch-background-by-cartographypermission-Id
      operationId: createPropertyReference-cartographypermission-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelBackground'
        "204":
          description: No Content
  /api/cartography-groups/{id}/backgrounds/{propertyId}:
    get:
      tags:
        - cartography group
      description: get-background-by-cartographypermission-Id
      operationId: followPropertyReference-cartographypermission-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelBackground'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography group
      description: delete-background-by-cartographypermission-Id
      operationId: deletePropertyReferenceId-cartographypermission-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-groups/{id}/members:
    get:
      tags:
        - cartography group
      description: get-cartography-by-cartographypermission-Id
      operationId: followPropertyReference-cartographypermission-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - cartography group
      description: update-cartography-by-cartographypermission-Id
      operationId: createPropertyReference-cartographypermission-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - cartography group
      description: delete-cartography-by-cartographypermission-Id
      operationId: deletePropertyReference-cartographypermission-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography group
      description: patch-cartography-by-cartographypermission-Id
      operationId: createPropertyReference-cartographypermission-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "204":
          description: No Content
  /api/cartography-groups/{id}/members/{propertyId}:
    get:
      tags:
        - cartography group
      description: get-cartography-by-cartographypermission-Id
      operationId: followPropertyReference-cartographypermission-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography group
      description: delete-cartography-by-cartographypermission-Id
      operationId: deletePropertyReferenceId-cartographypermission-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-groups/{id}/roles:
    get:
      tags:
        - cartography group
      description: get-role-by-cartographypermission-Id
      operationId: followPropertyReference-cartographypermission-get_4_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "404":
          description: Not Found
    put:
      tags:
        - cartography group
      description: update-role-by-cartographypermission-Id
      operationId: createPropertyReference-cartographypermission-put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "204":
          description: No Content
    delete:
      tags:
        - cartography group
      description: delete-role-by-cartographypermission-Id
      operationId: deletePropertyReference-cartographypermission-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography group
      description: patch-role-by-cartographypermission-Id
      operationId: createPropertyReference-cartographypermission-patch_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "204":
          description: No Content
  /api/cartography-groups/{id}/roles/{propertyId}:
    get:
      tags:
        - cartography group
      description: get-role-by-cartographypermission-Id
      operationId: followPropertyReference-cartographypermission-get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography group
      description: delete-role-by-cartographypermission-Id
      operationId: deletePropertyReferenceId-cartographypermission-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-parameters:
    get:
      tags:
        - cartography parameter
      description: get-cartographyparameter
      operationId: getCollectionResource-cartographyparameter-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyParameter'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyParameter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyParameter'
    post:
      tags:
        - cartography parameter
      description: create-cartographyparameter
      operationId: postCollectionResource-cartographyparameter-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyParameter'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyParameter'
  /api/cartography-parameters/{id}:
    get:
      tags:
        - cartography parameter
      description: get-cartographyparameter
      operationId: getItemResource-cartographyparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyParameter'
        "404":
          description: Not Found
    put:
      tags:
        - cartography parameter
      description: update-cartographyparameter
      operationId: putItemResource-cartographyparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyParameter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyParameter'
        "204":
          description: No Content
    delete:
      tags:
        - cartography parameter
      description: delete-cartographyparameter
      operationId: deleteItemResource-cartographyparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography parameter
      description: patch-cartographyparameter
      operationId: patchItemResource-cartographyparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyParameter'
        "204":
          description: No Content
  /api/cartography-parameters/{id}/cartography:
    get:
      tags:
        - cartography parameter
      description: get-cartography-by-cartographyparameter-Id
      operationId: followPropertyReference-cartographyparameter-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - cartography parameter
      description: update-cartography-by-cartographyparameter-Id
      operationId: createPropertyReference-cartographyparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - cartography parameter
      description: delete-cartography-by-cartographyparameter-Id
      operationId: deletePropertyReference-cartographyparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography parameter
      description: patch-cartography-by-cartographyparameter-Id
      operationId: createPropertyReference-cartographyparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/cartography-parameters/{id}/cartography/{propertyId}:
    get:
      tags:
        - cartography parameter
      description: get-cartography-by-cartographyparameter-Id
      operationId: followPropertyReference-cartographyparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography parameter
      description: delete-cartography-by-cartographyparameter-Id
      operationId: deletePropertyReferenceId-cartographyparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/cartography-styles:
    get:
      tags:
        - cartography style
      description: get-cartographystyle
      operationId: getCollectionResource-cartographystyle-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyStyle'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyStyle'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCartographyStyle'
    post:
      tags:
        - cartography style
      description: create-cartographystyle
      operationId: postCollectionResource-cartographystyle-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyStyle'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
  /api/cartography-styles/{id}:
    get:
      tags:
        - cartography style
      description: get-cartographystyle
      operationId: getItemResource-cartographystyle-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "404":
          description: Not Found
    put:
      tags:
        - cartography style
      description: update-cartographystyle
      operationId: putItemResource-cartographystyle-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyStyle'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "204":
          description: No Content
    delete:
      tags:
        - cartography style
      description: delete-cartographystyle
      operationId: deleteItemResource-cartographystyle-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography style
      description: patch-cartographystyle
      operationId: patchItemResource-cartographystyle-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CartographyStyle'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        "204":
          description: No Content
  /api/cartography-styles/{id}/cartography:
    get:
      tags:
        - cartography style
      description: get-cartography-by-cartographystyle-Id
      operationId: followPropertyReference-cartographystyle-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - cartography style
      description: update-cartography-by-cartographystyle-Id
      operationId: createPropertyReference-cartographystyle-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - cartography style
      description: delete-cartography-by-cartographystyle-Id
      operationId: deletePropertyReference-cartographystyle-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - cartography style
      description: patch-cartography-by-cartographystyle-Id
      operationId: createPropertyReference-cartographystyle-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/cartography-styles/{id}/cartography/{propertyId}:
    get:
      tags:
        - cartography style
      description: get-cartography-by-cartographystyle-Id
      operationId: followPropertyReference-cartographystyle-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - cartography style
      description: delete-cartography-by-cartographystyle-Id
      operationId: deletePropertyReferenceId-cartographystyle-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/codelist-values:
    get:
      tags:
        - code list
      description: get-codelistvalue
      operationId: getCollectionResource-codelistvalue-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCodeListValue'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCodeListValue'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelCodeListValue'
    post:
      tags:
        - code list
      description: create-codelistvalue
      operationId: postCollectionResource-codelistvalue-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeListValue'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCodeListValue'
  /api/codelist-values/search/existsByCodeListNameAndValue:
    get:
      tags:
        - code list
      operationId: executeSearch-codelistvalue-get
      parameters:
        - name: codeList
          in: query
          schema:
            type: string
        - name: code
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                type: boolean
        "404":
          description: Not Found
  /api/codelist-values/search/findDistinctCodeListName:
    get:
      tags:
        - code list
      operationId: executeSearch-codelistvalue-get_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCodeListValue'
        "404":
          description: Not Found
  /api/codelist-values/{id}:
    get:
      tags:
        - code list
      description: get-codelistvalue
      operationId: getItemResource-codelistvalue-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCodeListValue'
        "404":
          description: Not Found
    put:
      tags:
        - code list
      description: update-codelistvalue
      operationId: putItemResource-codelistvalue-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeListValue'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCodeListValue'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCodeListValue'
        "204":
          description: No Content
    delete:
      tags:
        - code list
      description: delete-codelistvalue
      operationId: deleteItemResource-codelistvalue-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - code list
      description: patch-codelistvalue
      operationId: patchItemResource-codelistvalue-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CodeListValue'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCodeListValue'
        "204":
          description: No Content
  /api/comments:
    get:
      tags:
        - comment
      description: get-comment
      operationId: getCollectionResource-comment-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelComment'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelComment'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelComment'
    post:
      tags:
        - comment
      description: create-comment
      operationId: postCollectionResource-comment-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelComment'
  /api/comments/{id}:
    get:
      tags:
        - comment
      description: get-comment
      operationId: getItemResource-comment-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelComment'
        "404":
          description: Not Found
    put:
      tags:
        - comment
      description: update-comment
      operationId: putItemResource-comment-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelComment'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelComment'
        "204":
          description: No Content
    delete:
      tags:
        - comment
      description: delete-comment
      operationId: deleteItemResource-comment-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - comment
      description: patch-comment
      operationId: patchItemResource-comment-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelComment'
        "204":
          description: No Content
  /api/comments/{id}/application:
    get:
      tags:
        - comment
      description: get-application-by-comment-Id
      operationId: followPropertyReference-comment-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    put:
      tags:
        - comment
      description: update-application-by-comment-Id
      operationId: createPropertyReference-comment-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
    delete:
      tags:
        - comment
      description: delete-application-by-comment-Id
      operationId: deletePropertyReference-comment-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - comment
      description: patch-application-by-comment-Id
      operationId: createPropertyReference-comment-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
  /api/comments/{id}/application/{propertyId}:
    get:
      tags:
        - comment
      description: get-application-by-comment-Id
      operationId: followPropertyReference-comment-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    delete:
      tags:
        - comment
      description: delete-application-by-comment-Id
      operationId: deletePropertyReferenceId-comment-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/comments/{id}/user:
    get:
      tags:
        - comment
      description: get-user-by-comment-Id
      operationId: followPropertyReference-comment-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    put:
      tags:
        - comment
      description: update-user-by-comment-Id
      operationId: createPropertyReference-comment-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
        - comment
      description: delete-user-by-comment-Id
      operationId: deletePropertyReference-comment-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - comment
      description: patch-user-by-comment-Id
      operationId: createPropertyReference-comment-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
  /api/comments/{id}/user/{propertyId}:
    get:
      tags:
        - comment
      description: get-user-by-comment-Id
      operationId: followPropertyReference-comment-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
        - comment
      description: delete-user-by-comment-Id
      operationId: deletePropertyReferenceId-comment-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/configuration-parameters:
    get:
      tags:
        - configuration parameter
      description: get-configurationparameter
      operationId: getCollectionResource-configurationparameter-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelConfigurationParameter'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelConfigurationParameter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelConfigurationParameter'
    post:
      tags:
        - configuration parameter
      description: create-configurationparameter
      operationId: postCollectionResource-configurationparameter-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationParameter'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfigurationParameter'
  /api/configuration-parameters/{id}:
    get:
      tags:
        - configuration parameter
      description: get-configurationparameter
      operationId: getItemResource-configurationparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfigurationParameter'
        "404":
          description: Not Found
    put:
      tags:
        - configuration parameter
      description: update-configurationparameter
      operationId: putItemResource-configurationparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfigurationParameter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfigurationParameter'
        "204":
          description: No Content
    delete:
      tags:
        - configuration parameter
      description: delete-configurationparameter
      operationId: deleteItemResource-configurationparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - configuration parameter
      description: patch-configurationparameter
      operationId: patchItemResource-configurationparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConfigurationParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelConfigurationParameter'
        "204":
          description: No Content
  /api/connections:
    get:
      tags:
        - connection
      description: get-databaseconnection
      operationId: getCollectionResource-databaseconnection-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelDatabaseConnection'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelDatabaseConnection'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelDatabaseConnection'
    post:
      tags:
        - connection
      description: create-databaseconnection
      operationId: postCollectionResource-databaseconnection-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseConnection'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
  /api/connections/{id}:
    get:
      tags:
        - connection
      description: get-databaseconnection
      operationId: getItemResource-databaseconnection-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "404":
          description: Not Found
    put:
      tags:
        - connection
      description: update-databaseconnection
      operationId: putItemResource-databaseconnection-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseConnection'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "204":
          description: No Content
    delete:
      tags:
        - connection
      description: delete-databaseconnection
      operationId: deleteItemResource-databaseconnection-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - connection
      description: patch-databaseconnection
      operationId: patchItemResource-databaseconnection-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DatabaseConnection'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "204":
          description: No Content
  /api/connections/{id}/cartographies:
    get:
      tags:
        - connection
      description: get-cartography-by-databaseconnection-Id
      operationId: followPropertyReference-databaseconnection-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - connection
      description: update-cartography-by-databaseconnection-Id
      operationId: createPropertyReference-databaseconnection-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - connection
      description: delete-cartography-by-databaseconnection-Id
      operationId: deletePropertyReference-databaseconnection-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - connection
      description: patch-cartography-by-databaseconnection-Id
      operationId: createPropertyReference-databaseconnection-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "204":
          description: No Content
  /api/connections/{id}/cartographies/{propertyId}:
    get:
      tags:
        - connection
      description: get-cartography-by-databaseconnection-Id
      operationId: followPropertyReference-databaseconnection-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - connection
      description: delete-cartography-by-databaseconnection-Id
      operationId: deletePropertyReferenceId-databaseconnection-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/connections/{id}/tasks:
    get:
      tags:
        - connection
      description: get-task-by-databaseconnection-Id
      operationId: followPropertyReference-databaseconnection-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - connection
      description: update-task-by-databaseconnection-Id
      operationId: createPropertyReference-databaseconnection-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - connection
      description: delete-task-by-databaseconnection-Id
      operationId: deletePropertyReference-databaseconnection-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - connection
      description: patch-task-by-databaseconnection-Id
      operationId: createPropertyReference-databaseconnection-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "204":
          description: No Content
  /api/connections/{id}/tasks/{propertyId}:
    get:
      tags:
        - connection
      description: get-task-by-databaseconnection-Id
      operationId: followPropertyReference-databaseconnection-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - connection
      description: delete-task-by-databaseconnection-Id
      operationId: deletePropertyReferenceId-databaseconnection-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/downloadTasks:
    get:
      tags:
        - download-task-entity-controller
      description: get-downloadtask
      operationId: getCollectionResource-downloadtask-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelDownloadTask'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelDownloadTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelDownloadTask'
    post:
      tags:
        - download-task-entity-controller
      description: create-downloadtask
      operationId: postCollectionResource-downloadtask-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadTask'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDownloadTask'
  /api/downloadTasks/{id}:
    get:
      tags:
        - download-task-entity-controller
      description: get-downloadtask
      operationId: getItemResource-downloadtask-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDownloadTask'
        "404":
          description: Not Found
    put:
      tags:
        - download-task-entity-controller
      description: update-downloadtask
      operationId: putItemResource-downloadtask-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadTask'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDownloadTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDownloadTask'
        "204":
          description: No Content
    delete:
      tags:
        - download-task-entity-controller
      description: delete-downloadtask
      operationId: deleteItemResource-downloadtask-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - download-task-entity-controller
      description: patch-downloadtask
      operationId: patchItemResource-downloadtask-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DownloadTask'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDownloadTask'
        "204":
          description: No Content
  /api/languages:
    get:
      tags:
        - language
      description: get-language
      operationId: getCollectionResource-language-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLanguage'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLanguage'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLanguage'
    post:
      tags:
        - language
      description: create-language
      operationId: postCollectionResource-language-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
  /api/languages/{id}:
    get:
      tags:
        - language
      description: get-language
      operationId: getItemResource-language-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    put:
      tags:
        - language
      description: update-language
      operationId: putItemResource-language-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
        - language
      description: delete-language
      operationId: deleteItemResource-language-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - language
      description: patch-language
      operationId: patchItemResource-language-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Language'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
  /api/logs:
    get:
      tags:
        - log
      description: get-log
      operationId: getCollectionResource-log-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLog'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLog'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelLog'
    post:
      tags:
        - log
      description: create-log
      operationId: postCollectionResource-log-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Log'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLog'
  /api/logs/{id}:
    get:
      tags:
        - log
      description: get-log
      operationId: getItemResource-log-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLog'
        "404":
          description: Not Found
    put:
      tags:
        - log
      description: update-log
      operationId: putItemResource-log-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Log'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLog'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLog'
        "204":
          description: No Content
    delete:
      tags:
        - log
      description: delete-log
      operationId: deleteItemResource-log-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - log
      description: patch-log
      operationId: patchItemResource-log-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Log'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLog'
        "204":
          description: No Content
  /api/logs/{id}/application:
    get:
      tags:
        - log
      description: get-application-by-log-Id
      operationId: followPropertyReference-log-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    put:
      tags:
        - log
      description: update-application-by-log-Id
      operationId: createPropertyReference-log-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
    delete:
      tags:
        - log
      description: delete-application-by-log-Id
      operationId: deletePropertyReference-log-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - log
      description: patch-application-by-log-Id
      operationId: createPropertyReference-log-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "204":
          description: No Content
  /api/logs/{id}/application/{propertyId}:
    get:
      tags:
        - log
      description: get-application-by-log-Id
      operationId: followPropertyReference-log-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelApplication'
        "404":
          description: Not Found
    delete:
      tags:
        - log
      description: delete-application-by-log-Id
      operationId: deletePropertyReferenceId-log-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/logs/{id}/cartography:
    get:
      tags:
        - log
      description: get-cartography-by-log-Id
      operationId: followPropertyReference-log-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - log
      description: update-cartography-by-log-Id
      operationId: createPropertyReference-log-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - log
      description: delete-cartography-by-log-Id
      operationId: deletePropertyReference-log-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - log
      description: patch-cartography-by-log-Id
      operationId: createPropertyReference-log-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/logs/{id}/cartography/{propertyId}:
    get:
      tags:
        - log
      description: get-cartography-by-log-Id
      operationId: followPropertyReference-log-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - log
      description: delete-cartography-by-log-Id
      operationId: deletePropertyReferenceId-log-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/logs/{id}/task:
    get:
      tags:
        - log
      description: get-task-by-log-Id
      operationId: followPropertyReference-log-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - log
      description: update-task-by-log-Id
      operationId: createPropertyReference-log-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - log
      description: delete-task-by-log-Id
      operationId: deletePropertyReference-log-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - log
      description: patch-task-by-log-Id
      operationId: createPropertyReference-log-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
  /api/logs/{id}/task/{propertyId}:
    get:
      tags:
        - log
      description: get-task-by-log-Id
      operationId: followPropertyReference-log-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - log
      description: delete-task-by-log-Id
      operationId: deletePropertyReferenceId-log-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/logs/{id}/territory:
    get:
      tags:
        - log
      description: get-territory-by-log-Id
      operationId: followPropertyReference-log-get_4_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    put:
      tags:
        - log
      description: update-territory-by-log-Id
      operationId: createPropertyReference-log-put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
    delete:
      tags:
        - log
      description: delete-territory-by-log-Id
      operationId: deletePropertyReference-log-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - log
      description: patch-territory-by-log-Id
      operationId: createPropertyReference-log-patch_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
  /api/logs/{id}/territory/{propertyId}:
    get:
      tags:
        - log
      description: get-territory-by-log-Id
      operationId: followPropertyReference-log-get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    delete:
      tags:
        - log
      description: delete-territory-by-log-Id
      operationId: deletePropertyReferenceId-log-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/logs/{id}/user:
    get:
      tags:
        - log
      description: get-user-by-log-Id
      operationId: followPropertyReference-log-get_5_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    put:
      tags:
        - log
      description: update-user-by-log-Id
      operationId: createPropertyReference-log-put_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
        - log
      description: delete-user-by-log-Id
      operationId: deletePropertyReference-log-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - log
      description: patch-user-by-log-Id
      operationId: createPropertyReference-log-patch_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
  /api/logs/{id}/user/{propertyId}:
    get:
      tags:
        - log
      description: get-user-by-log-Id
      operationId: followPropertyReference-log-get_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
        - log
      description: delete-user-by-log-Id
      operationId: deletePropertyReferenceId-log-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/profile:
    get:
      tags:
        - hal profile
      operationId: listAllFormsOfMetadata_1
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/RepresentationModelObject'
      security: [ ]
  /api/profile/application-backgrounds:
    get:
      tags:
        - hal profile
      operationId: descriptor_1
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/application-parameters:
    get:
      tags:
        - hal profile
      operationId: descriptor_2
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/applications:
    get:
      tags:
        - hal profile
      operationId: descriptor_3
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/backgrounds:
    get:
      tags:
        - hal profile
      operationId: descriptor_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/cartographies:
    get:
      tags:
        - hal profile
      operationId: descriptor_5
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/cartography-availabilities:
    get:
      tags:
        - hal profile
      operationId: descriptor_6
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/cartography-filters:
    get:
      tags:
        - hal profile
      operationId: descriptor_7
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/cartography-groups:
    get:
      tags:
        - hal profile
      operationId: descriptor_8
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/cartography-parameters:
    get:
      tags:
        - hal profile
      operationId: descriptor_9
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/cartography-styles:
    get:
      tags:
        - hal profile
      operationId: descriptor_10
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/codelist-values:
    get:
      tags:
        - hal profile
      operationId: descriptor_11
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/comments:
    get:
      tags:
        - hal profile
      operationId: descriptor_12
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/configuration-parameters:
    get:
      tags:
        - hal profile
      operationId: descriptor_13
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/connections:
    get:
      tags:
        - hal profile
      operationId: descriptor_14
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/downloadTasks:
    get:
      tags:
        - hal profile
      operationId: descriptor_15
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/languages:
    get:
      tags:
        - hal profile
      operationId: descriptor_16
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/logs:
    get:
      tags:
        - hal profile
      operationId: descriptor_17
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/queryTasks:
    get:
      tags:
        - hal profile
      operationId: descriptor_18
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/roles:
    get:
      tags:
        - hal profile
      operationId: descriptor_19
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/service-parameters:
    get:
      tags:
        - hal profile
      operationId: descriptor_20
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/services:
    get:
      tags:
        - hal profile
      operationId: descriptor_21
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/task-availabilities:
    get:
      tags:
        - hal profile
      operationId: descriptor_22
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/task-groups:
    get:
      tags:
        - hal profile
      operationId: descriptor_23
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/task-types:
    get:
      tags:
        - hal profile
      operationId: descriptor_24
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/task-uis:
    get:
      tags:
        - hal profile
      operationId: descriptor_25
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/taskParameters:
    get:
      tags:
        - hal profile
      operationId: descriptor_26
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/tasks:
    get:
      tags:
        - hal profile
      operationId: descriptor_27
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/territories:
    get:
      tags:
        - hal profile
      operationId: descriptor_28
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/territory-group-types:
    get:
      tags:
        - hal profile
      operationId: descriptor_29
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/territory-types:
    get:
      tags:
        - hal profile
      operationId: descriptor_30
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/thematicMapRanges:
    get:
      tags:
        - hal profile
      operationId: descriptor_31
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/thematicMaps:
    get:
      tags:
        - hal profile
      operationId: descriptor_32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/translations:
    get:
      tags:
        - hal profile
      operationId: descriptor_33
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/tree-nodes:
    get:
      tags:
        - hal profile
      operationId: descriptor_34
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/trees:
    get:
      tags:
        - hal profile
      operationId: descriptor_35
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/user-configurations:
    get:
      tags:
        - hal profile
      operationId: descriptor_36
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/user-positions:
    get:
      tags:
        - hal profile
      operationId: descriptor_37
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/profile/users:
    get:
      tags:
        - hal profile
      operationId: descriptor_38
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
            application/alps+json:
              schema:
                type: string
            application/schema+json:
              schema:
                $ref: '#/components/schemas/JsonSchema'
      security: [ ]
  /api/queryTasks:
    get:
      tags:
        - query-task-entity-controller
      description: get-querytask
      operationId: getCollectionResource-querytask-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelQueryTask'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelQueryTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelQueryTask'
    post:
      tags:
        - query-task-entity-controller
      description: create-querytask
      operationId: postCollectionResource-querytask-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTask'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelQueryTask'
  /api/queryTasks/{id}:
    get:
      tags:
        - query-task-entity-controller
      description: get-querytask
      operationId: getItemResource-querytask-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelQueryTask'
        "404":
          description: Not Found
    put:
      tags:
        - query-task-entity-controller
      description: update-querytask
      operationId: putItemResource-querytask-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTask'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelQueryTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelQueryTask'
        "204":
          description: No Content
    delete:
      tags:
        - query-task-entity-controller
      description: delete-querytask
      operationId: deleteItemResource-querytask-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - query-task-entity-controller
      description: patch-querytask
      operationId: patchItemResource-querytask-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QueryTask'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelQueryTask'
        "204":
          description: No Content
  /api/queryTasks/{id}/reportTask:
    get:
      tags:
        - query-task-property-reference-controller
      description: get-task-by-querytask-Id
      operationId: followPropertyReference-querytask-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - query-task-property-reference-controller
      description: update-task-by-querytask-Id
      operationId: createPropertyReference-querytask-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - query-task-property-reference-controller
      description: delete-task-by-querytask-Id
      operationId: deletePropertyReference-querytask-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - query-task-property-reference-controller
      description: patch-task-by-querytask-Id
      operationId: createPropertyReference-querytask-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
  /api/queryTasks/{id}/reportTask/{propertyId}:
    get:
      tags:
        - query-task-property-reference-controller
      description: get-task-by-querytask-Id
      operationId: followPropertyReference-querytask-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - query-task-property-reference-controller
      description: delete-task-by-querytask-Id
      operationId: deletePropertyReferenceId-querytask-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/roles:
    get:
      tags:
        - role
      description: get-role
      operationId: getCollectionResource-role-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelRole'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelRole'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelRole'
    post:
      tags:
        - role
      description: create-role
      operationId: postCollectionResource-role-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
  /api/roles/{id}:
    get:
      tags:
        - role
      description: get-role
      operationId: getItemResource-role-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "404":
          description: Not Found
    put:
      tags:
        - role
      description: update-role
      operationId: putItemResource-role-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "204":
          description: No Content
    delete:
      tags:
        - role
      description: delete-role
      operationId: deleteItemResource-role-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - role
      description: patch-role
      operationId: patchItemResource-role-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Role'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "204":
          description: No Content
  /api/roles/{id}/applications:
    get:
      tags:
        - role
      description: get-application-by-role-Id
      operationId: followPropertyReference-role-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "404":
          description: Not Found
    put:
      tags:
        - role
      description: update-application-by-role-Id
      operationId: createPropertyReference-role-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "204":
          description: No Content
    delete:
      tags:
        - role
      description: delete-application-by-role-Id
      operationId: deletePropertyReference-role-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - role
      description: patch-application-by-role-Id
      operationId: createPropertyReference-role-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "204":
          description: No Content
  /api/roles/{id}/applications/{propertyId}:
    get:
      tags:
        - role
      description: get-application-by-role-Id
      operationId: followPropertyReference-role-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "404":
          description: Not Found
    delete:
      tags:
        - role
      description: delete-application-by-role-Id
      operationId: deletePropertyReferenceId-role-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/roles/{id}/permissions:
    get:
      tags:
        - role
      description: get-cartographypermission-by-role-Id
      operationId: followPropertyReference-role-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "404":
          description: Not Found
    put:
      tags:
        - role
      description: update-cartographypermission-by-role-Id
      operationId: createPropertyReference-role-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "204":
          description: No Content
    delete:
      tags:
        - role
      description: delete-cartographypermission-by-role-Id
      operationId: deletePropertyReference-role-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - role
      description: patch-cartographypermission-by-role-Id
      operationId: createPropertyReference-role-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "204":
          description: No Content
  /api/roles/{id}/permissions/{propertyId}:
    get:
      tags:
        - role
      description: get-cartographypermission-by-role-Id
      operationId: followPropertyReference-role-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyPermission'
        "404":
          description: Not Found
    delete:
      tags:
        - role
      description: delete-cartographypermission-by-role-Id
      operationId: deletePropertyReferenceId-role-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/roles/{id}/tasks:
    get:
      tags:
        - role
      description: get-task-by-role-Id
      operationId: followPropertyReference-role-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - role
      description: update-task-by-role-Id
      operationId: createPropertyReference-role-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - role
      description: delete-task-by-role-Id
      operationId: deletePropertyReference-role-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - role
      description: patch-task-by-role-Id
      operationId: createPropertyReference-role-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "204":
          description: No Content
  /api/roles/{id}/tasks/{propertyId}:
    get:
      tags:
        - role
      description: get-task-by-role-Id
      operationId: followPropertyReference-role-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - role
      description: delete-task-by-role-Id
      operationId: deletePropertyReferenceId-role-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/roles/{id}/trees:
    get:
      tags:
        - role
      description: get-tree-by-role-Id
      operationId: followPropertyReference-role-get_4_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "404":
          description: Not Found
    put:
      tags:
        - role
      description: update-tree-by-role-Id
      operationId: createPropertyReference-role-put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "204":
          description: No Content
    delete:
      tags:
        - role
      description: delete-tree-by-role-Id
      operationId: deletePropertyReference-role-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - role
      description: patch-tree-by-role-Id
      operationId: createPropertyReference-role-patch_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "204":
          description: No Content
  /api/roles/{id}/trees/{propertyId}:
    get:
      tags:
        - role
      description: get-tree-by-role-Id
      operationId: followPropertyReference-role-get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTree'
        "404":
          description: Not Found
    delete:
      tags:
        - role
      description: delete-tree-by-role-Id
      operationId: deletePropertyReferenceId-role-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/roles/{id}/userConfigurations:
    get:
      tags:
        - role
      description: get-userconfiguration-by-role-Id
      operationId: followPropertyReference-role-get_5_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "404":
          description: Not Found
    put:
      tags:
        - role
      description: update-userconfiguration-by-role-Id
      operationId: createPropertyReference-role-put_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "204":
          description: No Content
    delete:
      tags:
        - role
      description: delete-userconfiguration-by-role-Id
      operationId: deletePropertyReference-role-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - role
      description: patch-userconfiguration-by-role-Id
      operationId: createPropertyReference-role-patch_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "204":
          description: No Content
  /api/roles/{id}/userConfigurations/{propertyId}:
    get:
      tags:
        - role
      description: get-userconfiguration-by-role-Id
      operationId: followPropertyReference-role-get_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "404":
          description: Not Found
    delete:
      tags:
        - role
      description: delete-userconfiguration-by-role-Id
      operationId: deletePropertyReferenceId-role-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/service-parameters:
    get:
      tags:
        - service parameter
      description: get-serviceparameter
      operationId: getCollectionResource-serviceparameter-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelServiceParameter'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelServiceParameter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelServiceParameter'
    post:
      tags:
        - service parameter
      description: create-serviceparameter
      operationId: postCollectionResource-serviceparameter-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceParameter'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceParameter'
  /api/service-parameters/{id}:
    get:
      tags:
        - service parameter
      description: get-serviceparameter
      operationId: getItemResource-serviceparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceParameter'
        "404":
          description: Not Found
    put:
      tags:
        - service parameter
      description: update-serviceparameter
      operationId: putItemResource-serviceparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceParameter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceParameter'
        "204":
          description: No Content
    delete:
      tags:
        - service parameter
      description: delete-serviceparameter
      operationId: deleteItemResource-serviceparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - service parameter
      description: patch-serviceparameter
      operationId: patchItemResource-serviceparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelServiceParameter'
        "204":
          description: No Content
  /api/service-parameters/{id}/service:
    get:
      tags:
        - service parameter
      description: get-service-by-serviceparameter-Id
      operationId: followPropertyReference-serviceparameter-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    put:
      tags:
        - service parameter
      description: update-service-by-serviceparameter-Id
      operationId: createPropertyReference-serviceparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
    delete:
      tags:
        - service parameter
      description: delete-service-by-serviceparameter-Id
      operationId: deletePropertyReference-serviceparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - service parameter
      description: patch-service-by-serviceparameter-Id
      operationId: createPropertyReference-serviceparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
  /api/service-parameters/{id}/service/{propertyId}:
    get:
      tags:
        - service parameter
      description: get-service-by-serviceparameter-Id
      operationId: followPropertyReference-serviceparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    delete:
      tags:
        - service parameter
      description: delete-service-by-serviceparameter-Id
      operationId: deletePropertyReferenceId-serviceparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/services:
    get:
      tags:
        - service
      description: get-service
      operationId: getCollectionResource-service-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelService'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelService'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelService'
    post:
      tags:
        - service
      description: create-service
      operationId: postCollectionResource-service-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
  /api/services/{id}:
    get:
      tags:
        - service
      description: get-service
      operationId: getItemResource-service-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    put:
      tags:
        - service
      description: update-service
      operationId: putItemResource-service-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
    delete:
      tags:
        - service
      description: delete-service
      operationId: deleteItemResource-service-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - service
      description: patch-service
      operationId: patchItemResource-service-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Service'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
  /api/services/{id}/layers:
    get:
      tags:
        - service
      description: get-cartography-by-service-Id
      operationId: followPropertyReference-service-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - service
      description: update-cartography-by-service-Id
      operationId: createPropertyReference-service-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - service
      description: delete-cartography-by-service-Id
      operationId: deletePropertyReference-service-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - service
      description: patch-cartography-by-service-Id
      operationId: createPropertyReference-service-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "204":
          description: No Content
  /api/services/{id}/layers/{propertyId}:
    get:
      tags:
        - service
      description: get-cartography-by-service-Id
      operationId: followPropertyReference-service-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - service
      description: delete-cartography-by-service-Id
      operationId: deletePropertyReferenceId-service-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/services/{id}/parameters:
    get:
      tags:
        - service
      description: get-serviceparameter-by-service-Id
      operationId: followPropertyReference-service-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelServiceParameter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelServiceParameter'
        "404":
          description: Not Found
    put:
      tags:
        - service
      description: update-serviceparameter-by-service-Id
      operationId: createPropertyReference-service-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelServiceParameter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelServiceParameter'
        "204":
          description: No Content
    delete:
      tags:
        - service
      description: delete-serviceparameter-by-service-Id
      operationId: deletePropertyReference-service-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - service
      description: patch-serviceparameter-by-service-Id
      operationId: createPropertyReference-service-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelServiceParameter'
        "204":
          description: No Content
  /api/services/{id}/parameters/{propertyId}:
    get:
      tags:
        - service
      description: get-serviceparameter-by-service-Id
      operationId: followPropertyReference-service-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelServiceParameter'
        "404":
          description: Not Found
    delete:
      tags:
        - service
      description: delete-serviceparameter-by-service-Id
      operationId: deletePropertyReferenceId-service-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/task-availabilities:
    get:
      tags:
        - task availability
      description: get-taskavailability
      operationId: getCollectionResource-taskavailability-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskAvailability'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskAvailability'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskAvailability'
    post:
      tags:
        - task availability
      description: create-taskavailability
      operationId: postCollectionResource-taskavailability-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAvailability'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskAvailability'
  /api/task-availabilities/{id}:
    get:
      tags:
        - task availability
      description: get-taskavailability
      operationId: getItemResource-taskavailability-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskAvailability'
        "404":
          description: Not Found
    put:
      tags:
        - task availability
      description: update-taskavailability
      operationId: putItemResource-taskavailability-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAvailability'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskAvailability'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskAvailability'
        "204":
          description: No Content
    delete:
      tags:
        - task availability
      description: delete-taskavailability
      operationId: deleteItemResource-taskavailability-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task availability
      description: patch-taskavailability
      operationId: patchItemResource-taskavailability-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskAvailability'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskAvailability'
        "204":
          description: No Content
  /api/task-availabilities/{id}/task:
    get:
      tags:
        - task availability
      description: get-task-by-taskavailability-Id
      operationId: followPropertyReference-taskavailability-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - task availability
      description: update-task-by-taskavailability-Id
      operationId: createPropertyReference-taskavailability-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - task availability
      description: delete-task-by-taskavailability-Id
      operationId: deletePropertyReference-taskavailability-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task availability
      description: patch-task-by-taskavailability-Id
      operationId: createPropertyReference-taskavailability-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
  /api/task-availabilities/{id}/task/{propertyId}:
    get:
      tags:
        - task availability
      description: get-task-by-taskavailability-Id
      operationId: followPropertyReference-taskavailability-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - task availability
      description: delete-task-by-taskavailability-Id
      operationId: deletePropertyReferenceId-taskavailability-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/task-availabilities/{id}/territory:
    get:
      tags:
        - task availability
      description: get-territory-by-taskavailability-Id
      operationId: followPropertyReference-taskavailability-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    put:
      tags:
        - task availability
      description: update-territory-by-taskavailability-Id
      operationId: createPropertyReference-taskavailability-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
    delete:
      tags:
        - task availability
      description: delete-territory-by-taskavailability-Id
      operationId: deletePropertyReference-taskavailability-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task availability
      description: patch-territory-by-taskavailability-Id
      operationId: createPropertyReference-taskavailability-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
  /api/task-availabilities/{id}/territory/{propertyId}:
    get:
      tags:
        - task availability
      description: get-territory-by-taskavailability-Id
      operationId: followPropertyReference-taskavailability-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    delete:
      tags:
        - task availability
      description: delete-territory-by-taskavailability-Id
      operationId: deletePropertyReferenceId-taskavailability-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/task-groups:
    get:
      tags:
        - task group
      description: get-taskgroup
      operationId: getCollectionResource-taskgroup-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskGroup'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskGroup'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskGroup'
    post:
      tags:
        - task group
      description: create-taskgroup
      operationId: postCollectionResource-taskgroup-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGroup'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
  /api/task-groups/{id}:
    get:
      tags:
        - task group
      description: get-taskgroup
      operationId: getItemResource-taskgroup-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "404":
          description: Not Found
    put:
      tags:
        - task group
      description: update-taskgroup
      operationId: putItemResource-taskgroup-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGroup'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "204":
          description: No Content
    delete:
      tags:
        - task group
      description: delete-taskgroup
      operationId: deleteItemResource-taskgroup-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task group
      description: patch-taskgroup
      operationId: patchItemResource-taskgroup-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskGroup'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "204":
          description: No Content
  /api/task-types:
    get:
      tags:
        - task type
      description: get-tasktype
      operationId: getCollectionResource-tasktype-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskType'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskType'
    post:
      tags:
        - task type
      description: create-tasktype
      operationId: postCollectionResource-tasktype-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskType'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
  /api/task-types/{id}:
    get:
      tags:
        - task type
      description: get-tasktype
      operationId: getItemResource-tasktype-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "404":
          description: Not Found
    put:
      tags:
        - task type
      description: update-tasktype
      operationId: putItemResource-tasktype-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskType'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "204":
          description: No Content
    delete:
      tags:
        - task type
      description: delete-tasktype
      operationId: deleteItemResource-tasktype-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task type
      description: patch-tasktype
      operationId: patchItemResource-tasktype-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskType'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "204":
          description: No Content
  /api/task-types/{id}/children:
    get:
      tags:
        - task type
      description: get-tasktype-by-tasktype-Id
      operationId: followPropertyReference-tasktype-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskType'
        "404":
          description: Not Found
    put:
      tags:
        - task type
      description: update-tasktype-by-tasktype-Id
      operationId: createPropertyReference-tasktype-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskType'
        "204":
          description: No Content
    delete:
      tags:
        - task type
      description: delete-tasktype-by-tasktype-Id
      operationId: deletePropertyReference-tasktype-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task type
      description: patch-tasktype-by-tasktype-Id
      operationId: createPropertyReference-tasktype-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskType'
        "204":
          description: No Content
  /api/task-types/{id}/children/{propertyId}:
    get:
      tags:
        - task type
      description: get-tasktype-by-tasktype-Id
      operationId: followPropertyReference-tasktype-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskType'
        "404":
          description: Not Found
    delete:
      tags:
        - task type
      description: delete-tasktype-by-tasktype-Id
      operationId: deletePropertyReferenceId-tasktype-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/task-types/{id}/parent:
    get:
      tags:
        - task type
      description: get-tasktype-by-tasktype-Id
      operationId: followPropertyReference-tasktype-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "404":
          description: Not Found
    put:
      tags:
        - task type
      description: update-tasktype-by-tasktype-Id
      operationId: createPropertyReference-tasktype-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "204":
          description: No Content
    delete:
      tags:
        - task type
      description: delete-tasktype-by-tasktype-Id
      operationId: deletePropertyReference-tasktype-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task type
      description: patch-tasktype-by-tasktype-Id
      operationId: createPropertyReference-tasktype-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "204":
          description: No Content
  /api/task-types/{id}/parent/{propertyId}:
    get:
      tags:
        - task type
      description: get-tasktype-by-tasktype-Id
      operationId: followPropertyReference-tasktype-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "404":
          description: Not Found
    delete:
      tags:
        - task type
      description: delete-tasktype-by-tasktype-Id
      operationId: deletePropertyReferenceId-tasktype-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/task-uis:
    get:
      tags:
        - task ui
      description: get-taskui
      operationId: getCollectionResource-taskui-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskUI'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskUI'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskUI'
    post:
      tags:
        - task ui
      description: create-taskui
      operationId: postCollectionResource-taskui-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUI'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
  /api/task-uis/{id}:
    get:
      tags:
        - task ui
      description: get-taskui
      operationId: getItemResource-taskui-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "404":
          description: Not Found
    put:
      tags:
        - task ui
      description: update-taskui
      operationId: putItemResource-taskui-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUI'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "204":
          description: No Content
    delete:
      tags:
        - task ui
      description: delete-taskui
      operationId: deleteItemResource-taskui-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task ui
      description: patch-taskui
      operationId: patchItemResource-taskui-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskUI'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "204":
          description: No Content
  /api/taskParameters:
    get:
      tags:
        - task parameter
      description: get-taskparameter
      operationId: getCollectionResource-taskparameter-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskParameter'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskParameter'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTaskParameter'
    post:
      tags:
        - task parameter
      description: create-taskparameter
      operationId: postCollectionResource-taskparameter-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskParameter'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskParameter'
  /api/taskParameters/search/deleteAllByTask:
    get:
      tags:
        - task parameter
      operationId: executeSearch-taskparameter-get
      parameters:
        - name: task
          in: query
          schema:
            $ref: '#/components/schemas/Task'
      responses:
        "200":
          description: OK
        "404":
          description: Not Found
  /api/taskParameters/search/findAllByTask:
    get:
      tags:
        - task parameter
      operationId: executeSearch-taskparameter-get_1
      parameters:
        - name: task
          in: query
          schema:
            $ref: '#/components/schemas/Task'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskParameter'
        "404":
          description: Not Found
  /api/taskParameters/{id}:
    get:
      tags:
        - task parameter
      description: get-taskparameter
      operationId: getItemResource-taskparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskParameter'
        "404":
          description: Not Found
    put:
      tags:
        - task parameter
      description: update-taskparameter
      operationId: putItemResource-taskparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskParameter'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskParameter'
        "204":
          description: No Content
    delete:
      tags:
        - task parameter
      description: delete-taskparameter
      operationId: deleteItemResource-taskparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task parameter
      description: patch-taskparameter
      operationId: patchItemResource-taskparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TaskParameter'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskParameter'
        "204":
          description: No Content
  /api/taskParameters/{id}/task:
    get:
      tags:
        - task parameter
      description: get-task-by-taskparameter-Id
      operationId: followPropertyReference-taskparameter-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - task parameter
      description: update-task-by-taskparameter-Id
      operationId: createPropertyReference-taskparameter-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - task parameter
      description: delete-task-by-taskparameter-Id
      operationId: deletePropertyReference-taskparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task parameter
      description: patch-task-by-taskparameter-Id
      operationId: createPropertyReference-taskparameter-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
  /api/taskParameters/{id}/task/{propertyId}:
    get:
      tags:
        - task parameter
      description: get-task-by-taskparameter-Id
      operationId: followPropertyReference-taskparameter-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - task parameter
      description: delete-task-by-taskparameter-Id
      operationId: deletePropertyReferenceId-taskparameter-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks:
    get:
      tags:
        - task
      description: get-task
      operationId: getCollectionResource-task-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTask'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTask'
    post:
      tags:
        - task
      description: create-task
      operationId: postCollectionResource-task-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
  /api/tasks/search/available:
    get:
      tags:
        - task
      operationId: executeSearch-task-get
      parameters:
        - name: applicationId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "404":
          description: Not Found
  /api/tasks/search/findAllByTypeId:
    get:
      tags:
        - task
      operationId: executeSearch-task-get_1
      parameters:
        - name: typeId
          in: query
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "404":
          description: Not Found
  /api/tasks/{id}:
    get:
      tags:
        - task
      description: get-task
      operationId: getItemResource-task-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-task
      operationId: putItemResource-task-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-task
      operationId: deleteItemResource-task-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-task
      operationId: patchItemResource-task-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
  /api/tasks/{id}/availabilities:
    get:
      tags:
        - task
      description: get-taskavailability-by-task-Id
      operationId: followPropertyReference-task-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-taskavailability-by-task-Id
      operationId: createPropertyReference-task-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-taskavailability-by-task-Id
      operationId: deletePropertyReference-task-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-taskavailability-by-task-Id
      operationId: createPropertyReference-task-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "204":
          description: No Content
  /api/tasks/{id}/availabilities/{propertyId}:
    get:
      tags:
        - task
      description: get-taskavailability-by-task-Id
      operationId: followPropertyReference-task-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-taskavailability-by-task-Id
      operationId: deletePropertyReferenceId-task-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/cartography:
    get:
      tags:
        - task
      description: get-cartography-by-task-Id
      operationId: followPropertyReference-task-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-cartography-by-task-Id
      operationId: createPropertyReference-task-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-cartography-by-task-Id
      operationId: deletePropertyReference-task-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-cartography-by-task-Id
      operationId: createPropertyReference-task-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/tasks/{id}/cartography/{propertyId}:
    get:
      tags:
        - task
      description: get-cartography-by-task-Id
      operationId: followPropertyReference-task-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-cartography-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/children:
    get:
      tags:
        - task
      description: get-task-by-task-Id
      operationId: followPropertyReference-task-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-task-by-task-Id
      operationId: createPropertyReference-task-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-task-by-task-Id
      operationId: deletePropertyReference-task-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-task-by-task-Id
      operationId: createPropertyReference-task-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "204":
          description: No Content
  /api/tasks/{id}/children/{propertyId}:
    get:
      tags:
        - task
      description: get-task-by-task-Id
      operationId: followPropertyReference-task-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-task-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/connection:
    get:
      tags:
        - task
      description: get-databaseconnection-by-task-Id
      operationId: followPropertyReference-task-get_4_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-databaseconnection-by-task-Id
      operationId: createPropertyReference-task-put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-databaseconnection-by-task-Id
      operationId: deletePropertyReference-task-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-databaseconnection-by-task-Id
      operationId: createPropertyReference-task-patch_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "204":
          description: No Content
  /api/tasks/{id}/connection/{propertyId}:
    get:
      tags:
        - task
      description: get-databaseconnection-by-task-Id
      operationId: followPropertyReference-task-get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-databaseconnection-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/group:
    get:
      tags:
        - task
      description: get-taskgroup-by-task-Id
      operationId: followPropertyReference-task-get_5_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-taskgroup-by-task-Id
      operationId: createPropertyReference-task-put_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-taskgroup-by-task-Id
      operationId: deletePropertyReference-task-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-taskgroup-by-task-Id
      operationId: createPropertyReference-task-patch_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "204":
          description: No Content
  /api/tasks/{id}/group/{propertyId}:
    get:
      tags:
        - task
      description: get-taskgroup-by-task-Id
      operationId: followPropertyReference-task-get_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-taskgroup-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/parent:
    get:
      tags:
        - task
      description: get-task-by-task-Id
      operationId: followPropertyReference-task-get_6_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-task-by-task-Id
      operationId: createPropertyReference-task-put_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-task-by-task-Id
      operationId: deletePropertyReference-task-delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-task-by-task-Id
      operationId: createPropertyReference-task-patch_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
  /api/tasks/{id}/parent/{propertyId}:
    get:
      tags:
        - task
      description: get-task-by-task-Id
      operationId: followPropertyReference-task-get_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-task-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/roles:
    get:
      tags:
        - task
      description: get-role-by-task-Id
      operationId: followPropertyReference-task-get_7_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-role-by-task-Id
      operationId: createPropertyReference-task-put_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-role-by-task-Id
      operationId: deletePropertyReference-task-delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-role-by-task-Id
      operationId: createPropertyReference-task-patch_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "204":
          description: No Content
  /api/tasks/{id}/roles/{propertyId}:
    get:
      tags:
        - task
      description: get-role-by-task-Id
      operationId: followPropertyReference-task-get_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-role-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/service:
    get:
      tags:
        - task
      description: get-service-by-task-Id
      operationId: followPropertyReference-task-get_8_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-service-by-task-Id
      operationId: createPropertyReference-task-put_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-service-by-task-Id
      operationId: deletePropertyReference-task-delete_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-service-by-task-Id
      operationId: createPropertyReference-task-patch_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "204":
          description: No Content
  /api/tasks/{id}/service/{propertyId}:
    get:
      tags:
        - task
      description: get-service-by-task-Id
      operationId: followPropertyReference-task-get_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelService'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-service-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/type:
    get:
      tags:
        - task
      description: get-tasktype-by-task-Id
      operationId: followPropertyReference-task-get_9_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-tasktype-by-task-Id
      operationId: createPropertyReference-task-put_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-tasktype-by-task-Id
      operationId: deletePropertyReference-task-delete_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-tasktype-by-task-Id
      operationId: createPropertyReference-task-patch_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "204":
          description: No Content
  /api/tasks/{id}/type/{propertyId}:
    get:
      tags:
        - task
      description: get-tasktype-by-task-Id
      operationId: followPropertyReference-task-get_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskType'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-tasktype-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tasks/{id}/ui:
    get:
      tags:
        - task
      description: get-taskui-by-task-Id
      operationId: followPropertyReference-task-get_10_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "404":
          description: Not Found
    put:
      tags:
        - task
      description: update-taskui-by-task-Id
      operationId: createPropertyReference-task-put_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "204":
          description: No Content
    delete:
      tags:
        - task
      description: delete-taskui-by-task-Id
      operationId: deletePropertyReference-task-delete_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - task
      description: patch-taskui-by-task-Id
      operationId: createPropertyReference-task-patch_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "204":
          description: No Content
  /api/tasks/{id}/ui/{propertyId}:
    get:
      tags:
        - task
      description: get-taskui-by-task-Id
      operationId: followPropertyReference-task-get_10
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTaskUI'
        "404":
          description: Not Found
    delete:
      tags:
        - task
      description: delete-taskui-by-task-Id
      operationId: deletePropertyReferenceId-task-delete_9
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territories:
    get:
      tags:
        - territory
      description: get-territory
      operationId: getCollectionResource-territory-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritory'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritory'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritory'
    post:
      tags:
        - territory
      description: create-territory
      operationId: postCollectionResource-territory-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Territory'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
  /api/territories/{id}:
    get:
      tags:
        - territory
      description: get-territory
      operationId: getItemResource-territory-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-territory
      operationId: putItemResource-territory-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Territory'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-territory
      operationId: deleteItemResource-territory-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-territory
      operationId: patchItemResource-territory-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Territory'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
  /api/territories/{id}/cartographyAvailabilities:
    get:
      tags:
        - territory
      description: get-cartographyavailability-by-territory-Id
      operationId: followPropertyReference-territory-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-cartographyavailability-by-territory-Id
      operationId: createPropertyReference-territory-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-cartographyavailability-by-territory-Id
      operationId: deletePropertyReference-territory-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-cartographyavailability-by-territory-Id
      operationId: createPropertyReference-territory-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "204":
          description: No Content
  /api/territories/{id}/cartographyAvailabilities/{propertyId}:
    get:
      tags:
        - territory
      description: get-cartographyavailability-by-territory-Id
      operationId: followPropertyReference-territory-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelCartographyAvailability'
        "404":
          description: Not Found
    delete:
      tags:
        - territory
      description: delete-cartographyavailability-by-territory-Id
      operationId: deletePropertyReferenceId-territory-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territories/{id}/groupType:
    get:
      tags:
        - territory
      description: get-territorygrouptype-by-territory-Id
      operationId: followPropertyReference-territory-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-territorygrouptype-by-territory-Id
      operationId: createPropertyReference-territory-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-territorygrouptype-by-territory-Id
      operationId: deletePropertyReference-territory-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-territorygrouptype-by-territory-Id
      operationId: createPropertyReference-territory-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "204":
          description: No Content
  /api/territories/{id}/groupType/{propertyId}:
    get:
      tags:
        - territory
      description: get-territorygrouptype-by-territory-Id
      operationId: followPropertyReference-territory-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "404":
          description: Not Found
    delete:
      tags:
        - territory
      description: delete-territorygrouptype-by-territory-Id
      operationId: deletePropertyReferenceId-territory-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territories/{id}/memberOf:
    get:
      tags:
        - territory
      description: get-territory-by-territory-Id
      operationId: followPropertyReference-territory-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-territory-by-territory-Id
      operationId: createPropertyReference-territory-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-territory-by-territory-Id
      operationId: deletePropertyReference-territory-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-territory-by-territory-Id
      operationId: createPropertyReference-territory-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "204":
          description: No Content
  /api/territories/{id}/memberOf/{propertyId}:
    get:
      tags:
        - territory
      description: get-territory-by-territory-Id
      operationId: followPropertyReference-territory-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "404":
          description: Not Found
    delete:
      tags:
        - territory
      description: delete-territory-by-territory-Id
      operationId: deletePropertyReferenceId-territory-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territories/{id}/members:
    get:
      tags:
        - territory
      description: get-territory-by-territory-Id
      operationId: followPropertyReference-territory-get_4_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-territory-by-territory-Id
      operationId: createPropertyReference-territory-put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-territory-by-territory-Id
      operationId: deletePropertyReference-territory-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-territory-by-territory-Id
      operationId: createPropertyReference-territory-patch_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "204":
          description: No Content
  /api/territories/{id}/members/{propertyId}:
    get:
      tags:
        - territory
      description: get-territory-by-territory-Id
      operationId: followPropertyReference-territory-get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTerritory'
        "404":
          description: Not Found
    delete:
      tags:
        - territory
      description: delete-territory-by-territory-Id
      operationId: deletePropertyReferenceId-territory-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territories/{id}/positions:
    get:
      tags:
        - territory
      description: get-userposition-by-territory-Id
      operationId: followPropertyReference-territory-get_5_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-userposition-by-territory-Id
      operationId: createPropertyReference-territory-put_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-userposition-by-territory-Id
      operationId: deletePropertyReference-territory-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-userposition-by-territory-Id
      operationId: createPropertyReference-territory-patch_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "204":
          description: No Content
  /api/territories/{id}/positions/{propertyId}:
    get:
      tags:
        - territory
      description: get-userposition-by-territory-Id
      operationId: followPropertyReference-territory-get_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "404":
          description: Not Found
    delete:
      tags:
        - territory
      description: delete-userposition-by-territory-Id
      operationId: deletePropertyReferenceId-territory-delete_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territories/{id}/taskAvailabilities:
    get:
      tags:
        - territory
      description: get-taskavailability-by-territory-Id
      operationId: followPropertyReference-territory-get_6_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-taskavailability-by-territory-Id
      operationId: createPropertyReference-territory-put_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-taskavailability-by-territory-Id
      operationId: deletePropertyReference-territory-delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-taskavailability-by-territory-Id
      operationId: createPropertyReference-territory-patch_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "204":
          description: No Content
  /api/territories/{id}/taskAvailabilities/{propertyId}:
    get:
      tags:
        - territory
      description: get-taskavailability-by-territory-Id
      operationId: followPropertyReference-territory-get_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaskAvailability'
        "404":
          description: Not Found
    delete:
      tags:
        - territory
      description: delete-taskavailability-by-territory-Id
      operationId: deletePropertyReferenceId-territory-delete_5
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territories/{id}/type:
    get:
      tags:
        - territory
      description: get-territorytype-by-territory-Id
      operationId: followPropertyReference-territory-get_7_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-territorytype-by-territory-Id
      operationId: createPropertyReference-territory-put_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-territorytype-by-territory-Id
      operationId: deletePropertyReference-territory-delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-territorytype-by-territory-Id
      operationId: createPropertyReference-territory-patch_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "204":
          description: No Content
  /api/territories/{id}/type/{propertyId}:
    get:
      tags:
        - territory
      description: get-territorytype-by-territory-Id
      operationId: followPropertyReference-territory-get_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "404":
          description: Not Found
    delete:
      tags:
        - territory
      description: delete-territorytype-by-territory-Id
      operationId: deletePropertyReferenceId-territory-delete_6
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territories/{id}/userConfigurations:
    get:
      tags:
        - territory
      description: get-userconfiguration-by-territory-Id
      operationId: followPropertyReference-territory-get_8_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "404":
          description: Not Found
    put:
      tags:
        - territory
      description: update-userconfiguration-by-territory-Id
      operationId: createPropertyReference-territory-put_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "204":
          description: No Content
    delete:
      tags:
        - territory
      description: delete-userconfiguration-by-territory-Id
      operationId: deletePropertyReference-territory-delete_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory
      description: patch-userconfiguration-by-territory-Id
      operationId: createPropertyReference-territory-patch_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "204":
          description: No Content
  /api/territories/{id}/userConfigurations/{propertyId}:
    get:
      tags:
        - territory
      description: get-userconfiguration-by-territory-Id
      operationId: followPropertyReference-territory-get_8
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "404":
          description: Not Found
    delete:
      tags:
        - territory
      description: delete-userconfiguration-by-territory-Id
      operationId: deletePropertyReferenceId-territory-delete_7
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/territory-group-types:
    get:
      tags:
        - territory group type
      description: get-territorygrouptype
      operationId: getCollectionResource-territorygrouptype-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritoryGroupType'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritoryGroupType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritoryGroupType'
    post:
      tags:
        - territory group type
      description: create-territorygrouptype
      operationId: postCollectionResource-territorygrouptype-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerritoryGroupType'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
  /api/territory-group-types/{id}:
    get:
      tags:
        - territory group type
      description: get-territorygrouptype
      operationId: getItemResource-territorygrouptype-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "404":
          description: Not Found
    put:
      tags:
        - territory group type
      description: update-territorygrouptype
      operationId: putItemResource-territorygrouptype-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerritoryGroupType'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "204":
          description: No Content
    delete:
      tags:
        - territory group type
      description: delete-territorygrouptype
      operationId: deleteItemResource-territorygrouptype-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory group type
      description: patch-territorygrouptype
      operationId: patchItemResource-territorygrouptype-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerritoryGroupType'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        "204":
          description: No Content
  /api/territory-types:
    get:
      tags:
        - territory type
      description: get-territorytype
      operationId: getCollectionResource-territorytype-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritoryType'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritoryType'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTerritoryType'
    post:
      tags:
        - territory type
      description: create-territorytype
      operationId: postCollectionResource-territorytype-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerritoryType'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
  /api/territory-types/{id}:
    get:
      tags:
        - territory type
      description: get-territorytype
      operationId: getItemResource-territorytype-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "404":
          description: Not Found
    put:
      tags:
        - territory type
      description: update-territorytype
      operationId: putItemResource-territorytype-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerritoryType'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "204":
          description: No Content
    delete:
      tags:
        - territory type
      description: delete-territorytype
      operationId: deleteItemResource-territorytype-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - territory type
      description: patch-territorytype
      operationId: patchItemResource-territorytype-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TerritoryType'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        "204":
          description: No Content
  /api/thematicMapRanges:
    get:
      tags:
        - thematic map range
      description: get-thematicmaprange
      operationId: getCollectionResource-thematicmaprange-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelThematicMapRange'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelThematicMapRange'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelThematicMapRange'
    post:
      tags:
        - thematic map range
      description: create-thematicmaprange
      operationId: postCollectionResource-thematicmaprange-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThematicMapRange'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMapRange'
  /api/thematicMapRanges/{id}:
    get:
      tags:
        - thematic map range
      description: get-thematicmaprange
      operationId: getItemResource-thematicmaprange-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMapRange'
        "404":
          description: Not Found
    put:
      tags:
        - thematic map range
      description: update-thematicmaprange
      operationId: putItemResource-thematicmaprange-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThematicMapRange'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMapRange'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMapRange'
        "204":
          description: No Content
    delete:
      tags:
        - thematic map range
      description: delete-thematicmaprange
      operationId: deleteItemResource-thematicmaprange-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - thematic map range
      description: patch-thematicmaprange
      operationId: patchItemResource-thematicmaprange-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThematicMapRange'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMapRange'
        "204":
          description: No Content
  /api/thematicMapRanges/{id}/map:
    get:
      tags:
        - thematic map range
      description: get-thematicmap-by-thematicmaprange-Id
      operationId: followPropertyReference-thematicmaprange-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "404":
          description: Not Found
    put:
      tags:
        - thematic map range
      description: update-thematicmap-by-thematicmaprange-Id
      operationId: createPropertyReference-thematicmaprange-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "204":
          description: No Content
    delete:
      tags:
        - thematic map range
      description: delete-thematicmap-by-thematicmaprange-Id
      operationId: deletePropertyReference-thematicmaprange-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - thematic map range
      description: patch-thematicmap-by-thematicmaprange-Id
      operationId: createPropertyReference-thematicmaprange-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "204":
          description: No Content
  /api/thematicMapRanges/{id}/map/{propertyId}:
    get:
      tags:
        - thematic map range
      description: get-thematicmap-by-thematicmaprange-Id
      operationId: followPropertyReference-thematicmaprange-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "404":
          description: Not Found
    delete:
      tags:
        - thematic map range
      description: delete-thematicmap-by-thematicmaprange-Id
      operationId: deletePropertyReferenceId-thematicmaprange-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/thematicMaps:
    get:
      tags:
        - thematic map
      description: get-thematicmap
      operationId: getCollectionResource-thematicmap-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelThematicMap'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelThematicMap'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelThematicMap'
    post:
      tags:
        - thematic map
      description: create-thematicmap
      operationId: postCollectionResource-thematicmap-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThematicMap'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
  /api/thematicMaps/{id}:
    get:
      tags:
        - thematic map
      description: get-thematicmap
      operationId: getItemResource-thematicmap-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "404":
          description: Not Found
    put:
      tags:
        - thematic map
      description: update-thematicmap
      operationId: putItemResource-thematicmap-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThematicMap'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "204":
          description: No Content
    delete:
      tags:
        - thematic map
      description: delete-thematicmap
      operationId: deleteItemResource-thematicmap-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - thematic map
      description: patch-thematicmap
      operationId: patchItemResource-thematicmap-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThematicMap'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelThematicMap'
        "204":
          description: No Content
  /api/thematicMaps/{id}/cartography:
    get:
      tags:
        - thematic map
      description: get-cartography-by-thematicmap-Id
      operationId: followPropertyReference-thematicmap-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - thematic map
      description: update-cartography-by-thematicmap-Id
      operationId: createPropertyReference-thematicmap-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - thematic map
      description: delete-cartography-by-thematicmap-Id
      operationId: deletePropertyReference-thematicmap-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - thematic map
      description: patch-cartography-by-thematicmap-Id
      operationId: createPropertyReference-thematicmap-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/thematicMaps/{id}/cartography/{propertyId}:
    get:
      tags:
        - thematic map
      description: get-cartography-by-thematicmap-Id
      operationId: followPropertyReference-thematicmap-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - thematic map
      description: delete-cartography-by-thematicmap-Id
      operationId: deletePropertyReferenceId-thematicmap-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/thematicMaps/{id}/task:
    get:
      tags:
        - thematic map
      description: get-task-by-thematicmap-Id
      operationId: followPropertyReference-thematicmap-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    put:
      tags:
        - thematic map
      description: update-task-by-thematicmap-Id
      operationId: createPropertyReference-thematicmap-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
    delete:
      tags:
        - thematic map
      description: delete-task-by-thematicmap-Id
      operationId: deletePropertyReference-thematicmap-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - thematic map
      description: patch-task-by-thematicmap-Id
      operationId: createPropertyReference-thematicmap-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "204":
          description: No Content
  /api/thematicMaps/{id}/task/{propertyId}:
    get:
      tags:
        - thematic map
      description: get-task-by-thematicmap-Id
      operationId: followPropertyReference-thematicmap-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTask'
        "404":
          description: Not Found
    delete:
      tags:
        - thematic map
      description: delete-task-by-thematicmap-Id
      operationId: deletePropertyReferenceId-thematicmap-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/thematicMaps/{id}/user:
    get:
      tags:
        - thematic map
      description: get-user-by-thematicmap-Id
      operationId: followPropertyReference-thematicmap-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    put:
      tags:
        - thematic map
      description: update-user-by-thematicmap-Id
      operationId: createPropertyReference-thematicmap-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
        - thematic map
      description: delete-user-by-thematicmap-Id
      operationId: deletePropertyReference-thematicmap-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - thematic map
      description: patch-user-by-thematicmap-Id
      operationId: createPropertyReference-thematicmap-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
  /api/thematicMaps/{id}/user/{propertyId}:
    get:
      tags:
        - thematic map
      description: get-user-by-thematicmap-Id
      operationId: followPropertyReference-thematicmap-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
        - thematic map
      description: delete-user-by-thematicmap-Id
      operationId: deletePropertyReferenceId-thematicmap-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/translations:
    get:
      tags:
        - translation
      description: get-translation
      operationId: getCollectionResource-translation-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTranslation'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTranslation'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTranslation'
    post:
      tags:
        - translation
      description: create-translation
      operationId: postCollectionResource-translation-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTranslation'
  /api/translations/search/findByEntityIdAndLocale:
    get:
      tags:
        - translation
      operationId: executeSearch-translation-get
      parameters:
        - name: element
          in: query
          schema:
            type: integer
            format: int32
        - name: locale
          in: query
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTranslation'
        "404":
          description: Not Found
  /api/translations/{id}:
    get:
      tags:
        - translation
      description: get-translation
      operationId: getItemResource-translation-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTranslation'
        "404":
          description: Not Found
    put:
      tags:
        - translation
      description: update-translation
      operationId: putItemResource-translation-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTranslation'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTranslation'
        "204":
          description: No Content
    delete:
      tags:
        - translation
      description: delete-translation
      operationId: deleteItemResource-translation-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - translation
      description: patch-translation
      operationId: patchItemResource-translation-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Translation'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTranslation'
        "204":
          description: No Content
  /api/translations/{id}/language:
    get:
      tags:
        - translation
      description: get-language-by-translation-Id
      operationId: followPropertyReference-translation-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    put:
      tags:
        - translation
      description: update-language-by-translation-Id
      operationId: createPropertyReference-translation-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
    delete:
      tags:
        - translation
      description: delete-language-by-translation-Id
      operationId: deletePropertyReference-translation-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - translation
      description: patch-language-by-translation-Id
      operationId: createPropertyReference-translation-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "204":
          description: No Content
  /api/translations/{id}/language/{propertyId}:
    get:
      tags:
        - translation
      description: get-language-by-translation-Id
      operationId: followPropertyReference-translation-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelLanguage'
        "404":
          description: Not Found
    delete:
      tags:
        - translation
      description: delete-language-by-translation-Id
      operationId: deletePropertyReferenceId-translation-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tree-nodes:
    get:
      tags:
        - tree node
      description: get-treenode
      operationId: getCollectionResource-treenode-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTreeNode'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTreeNode'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTreeNode'
    post:
      tags:
        - tree node
      description: create-treenode
      operationId: postCollectionResource-treenode-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TreeNode'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
  /api/tree-nodes/{id}:
    get:
      tags:
        - tree node
      description: get-treenode
      operationId: getItemResource-treenode-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "404":
          description: Not Found
    put:
      tags:
        - tree node
      description: update-treenode
      operationId: putItemResource-treenode-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TreeNode'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "204":
          description: No Content
    delete:
      tags:
        - tree node
      description: delete-treenode
      operationId: deleteItemResource-treenode-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree node
      description: patch-treenode
      operationId: patchItemResource-treenode-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TreeNode'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "204":
          description: No Content
  /api/tree-nodes/{id}/cartography:
    get:
      tags:
        - tree node
      description: get-cartography-by-treenode-Id
      operationId: followPropertyReference-treenode-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    put:
      tags:
        - tree node
      description: update-cartography-by-treenode-Id
      operationId: createPropertyReference-treenode-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
    delete:
      tags:
        - tree node
      description: delete-cartography-by-treenode-Id
      operationId: deletePropertyReference-treenode-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree node
      description: patch-cartography-by-treenode-Id
      operationId: createPropertyReference-treenode-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "204":
          description: No Content
  /api/tree-nodes/{id}/cartography/{propertyId}:
    get:
      tags:
        - tree node
      description: get-cartography-by-treenode-Id
      operationId: followPropertyReference-treenode-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelCartography'
        "404":
          description: Not Found
    delete:
      tags:
        - tree node
      description: delete-cartography-by-treenode-Id
      operationId: deletePropertyReferenceId-treenode-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tree-nodes/{id}/parent:
    get:
      tags:
        - tree node
      description: get-treenode-by-treenode-Id
      operationId: followPropertyReference-treenode-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "404":
          description: Not Found
    put:
      tags:
        - tree node
      description: update-treenode-by-treenode-Id
      operationId: createPropertyReference-treenode-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "204":
          description: No Content
    delete:
      tags:
        - tree node
      description: delete-treenode-by-treenode-Id
      operationId: deletePropertyReference-treenode-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree node
      description: patch-treenode-by-treenode-Id
      operationId: createPropertyReference-treenode-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "204":
          description: No Content
  /api/tree-nodes/{id}/parent/{propertyId}:
    get:
      tags:
        - tree node
      description: get-treenode-by-treenode-Id
      operationId: followPropertyReference-treenode-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTreeNode'
        "404":
          description: Not Found
    delete:
      tags:
        - tree node
      description: delete-treenode-by-treenode-Id
      operationId: deletePropertyReferenceId-treenode-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/tree-nodes/{id}/tree:
    get:
      tags:
        - tree node
      description: get-tree-by-treenode-Id
      operationId: followPropertyReference-treenode-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "404":
          description: Not Found
    put:
      tags:
        - tree node
      description: update-tree-by-treenode-Id
      operationId: createPropertyReference-treenode-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "204":
          description: No Content
    delete:
      tags:
        - tree node
      description: delete-tree-by-treenode-Id
      operationId: deletePropertyReference-treenode-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree node
      description: patch-tree-by-treenode-Id
      operationId: createPropertyReference-treenode-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "204":
          description: No Content
  /api/tree-nodes/{id}/tree/{propertyId}:
    get:
      tags:
        - tree node
      description: get-tree-by-treenode-Id
      operationId: followPropertyReference-treenode-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "404":
          description: Not Found
    delete:
      tags:
        - tree node
      description: delete-tree-by-treenode-Id
      operationId: deletePropertyReferenceId-treenode-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/trees:
    get:
      tags:
        - tree
      description: get-tree
      operationId: getCollectionResource-tree-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTree'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTree'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelTree'
    post:
      tags:
        - tree
      description: create-tree
      operationId: postCollectionResource-tree-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tree'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
  /api/trees/search/findOneWithEagerRelationships:
    get:
      tags:
        - tree
      operationId: executeSearch-tree-get
      parameters:
        - name: id
          in: query
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "404":
          description: Not Found
  /api/trees/{id}:
    get:
      tags:
        - tree
      description: get-tree
      operationId: getItemResource-tree-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "404":
          description: Not Found
    put:
      tags:
        - tree
      description: update-tree
      operationId: putItemResource-tree-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tree'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "204":
          description: No Content
    delete:
      tags:
        - tree
      description: delete-tree
      operationId: deleteItemResource-tree-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree
      description: patch-tree
      operationId: patchItemResource-tree-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tree'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTree'
        "204":
          description: No Content
  /api/trees/{id}/allNodes:
    get:
      tags:
        - tree
      description: get-treenode-by-tree-Id
      operationId: followPropertyReference-tree-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "404":
          description: Not Found
    put:
      tags:
        - tree
      description: update-treenode-by-tree-Id
      operationId: createPropertyReference-tree-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "204":
          description: No Content
    delete:
      tags:
        - tree
      description: delete-treenode-by-tree-Id
      operationId: deletePropertyReference-tree-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree
      description: patch-treenode-by-tree-Id
      operationId: createPropertyReference-tree-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "204":
          description: No Content
  /api/trees/{id}/allNodes/{propertyId}:
    get:
      tags:
        - tree
      description: get-treenode-by-tree-Id
      operationId: followPropertyReference-tree-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTreeNode'
        "404":
          description: Not Found
    delete:
      tags:
        - tree
      description: delete-treenode-by-tree-Id
      operationId: deletePropertyReferenceId-tree-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/trees/{id}/availableApplications:
    get:
      tags:
        - tree
      description: get-application-by-tree-Id
      operationId: followPropertyReference-tree-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "404":
          description: Not Found
    put:
      tags:
        - tree
      description: update-application-by-tree-Id
      operationId: createPropertyReference-tree-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "204":
          description: No Content
    delete:
      tags:
        - tree
      description: delete-application-by-tree-Id
      operationId: deletePropertyReference-tree-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree
      description: patch-application-by-tree-Id
      operationId: createPropertyReference-tree-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "204":
          description: No Content
  /api/trees/{id}/availableApplications/{propertyId}:
    get:
      tags:
        - tree
      description: get-application-by-tree-Id
      operationId: followPropertyReference-tree-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelApplication'
        "404":
          description: Not Found
    delete:
      tags:
        - tree
      description: delete-application-by-tree-Id
      operationId: deletePropertyReferenceId-tree-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/trees/{id}/availableRoles:
    get:
      tags:
        - tree
      description: get-role-by-tree-Id
      operationId: followPropertyReference-tree-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "404":
          description: Not Found
    put:
      tags:
        - tree
      description: update-role-by-tree-Id
      operationId: createPropertyReference-tree-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "204":
          description: No Content
    delete:
      tags:
        - tree
      description: delete-role-by-tree-Id
      operationId: deletePropertyReference-tree-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree
      description: patch-role-by-tree-Id
      operationId: createPropertyReference-tree-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "204":
          description: No Content
  /api/trees/{id}/availableRoles/{propertyId}:
    get:
      tags:
        - tree
      description: get-role-by-tree-Id
      operationId: followPropertyReference-tree-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelRole'
        "404":
          description: Not Found
    delete:
      tags:
        - tree
      description: delete-role-by-tree-Id
      operationId: deletePropertyReferenceId-tree-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/trees/{id}/owner:
    get:
      tags:
        - tree
      description: get-user-by-tree-Id
      operationId: followPropertyReference-tree-get_4_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    put:
      tags:
        - tree
      description: update-user-by-tree-Id
      operationId: createPropertyReference-tree-put_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
        - tree
      description: delete-user-by-tree-Id
      operationId: deletePropertyReference-tree-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - tree
      description: patch-user-by-tree-Id
      operationId: createPropertyReference-tree-patch_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
  /api/trees/{id}/owner/{propertyId}:
    get:
      tags:
        - tree
      description: get-user-by-tree-Id
      operationId: followPropertyReference-tree-get_4
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
        - tree
      description: delete-user-by-tree-Id
      operationId: deletePropertyReferenceId-tree-delete_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/user-configurations:
    get:
      tags:
        - user configuration
      description: get-userconfiguration
      operationId: getCollectionResource-userconfiguration-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUserConfiguration'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUserConfiguration'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUserConfiguration'
    post:
      tags:
        - user configuration
      description: create-userconfiguration
      operationId: postCollectionResource-userconfiguration-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfiguration'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserConfiguration'
  /api/user-configurations/search/findByUser:
    get:
      tags:
        - user configuration
      operationId: executeSearch-userconfiguration-get
      parameters:
        - name: currentUser
          in: query
          schema:
            $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "404":
          description: Not Found
  /api/user-configurations/{id}:
    get:
      tags:
        - user configuration
      description: get-userconfiguration
      operationId: getItemResource-userconfiguration-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserConfiguration'
        "404":
          description: Not Found
    put:
      tags:
        - user configuration
      description: update-userconfiguration
      operationId: putItemResource-userconfiguration-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfiguration'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserConfiguration'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserConfiguration'
        "204":
          description: No Content
    delete:
      tags:
        - user configuration
      description: delete-userconfiguration
      operationId: deleteItemResource-userconfiguration-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user configuration
      description: patch-userconfiguration
      operationId: patchItemResource-userconfiguration-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserConfiguration'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserConfiguration'
        "204":
          description: No Content
  /api/user-configurations/{id}/role:
    get:
      tags:
        - user configuration
      description: get-role-by-userconfiguration-Id
      operationId: followPropertyReference-userconfiguration-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "404":
          description: Not Found
    put:
      tags:
        - user configuration
      description: update-role-by-userconfiguration-Id
      operationId: createPropertyReference-userconfiguration-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "204":
          description: No Content
    delete:
      tags:
        - user configuration
      description: delete-role-by-userconfiguration-Id
      operationId: deletePropertyReference-userconfiguration-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user configuration
      description: patch-role-by-userconfiguration-Id
      operationId: createPropertyReference-userconfiguration-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "204":
          description: No Content
  /api/user-configurations/{id}/role/{propertyId}:
    get:
      tags:
        - user configuration
      description: get-role-by-userconfiguration-Id
      operationId: followPropertyReference-userconfiguration-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelRole'
        "404":
          description: Not Found
    delete:
      tags:
        - user configuration
      description: delete-role-by-userconfiguration-Id
      operationId: deletePropertyReferenceId-userconfiguration-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/user-configurations/{id}/territory:
    get:
      tags:
        - user configuration
      description: get-territory-by-userconfiguration-Id
      operationId: followPropertyReference-userconfiguration-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    put:
      tags:
        - user configuration
      description: update-territory-by-userconfiguration-Id
      operationId: createPropertyReference-userconfiguration-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
    delete:
      tags:
        - user configuration
      description: delete-territory-by-userconfiguration-Id
      operationId: deletePropertyReference-userconfiguration-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user configuration
      description: patch-territory-by-userconfiguration-Id
      operationId: createPropertyReference-userconfiguration-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
  /api/user-configurations/{id}/territory/{propertyId}:
    get:
      tags:
        - user configuration
      description: get-territory-by-userconfiguration-Id
      operationId: followPropertyReference-userconfiguration-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    delete:
      tags:
        - user configuration
      description: delete-territory-by-userconfiguration-Id
      operationId: deletePropertyReferenceId-userconfiguration-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/user-configurations/{id}/user:
    get:
      tags:
        - user configuration
      description: get-user-by-userconfiguration-Id
      operationId: followPropertyReference-userconfiguration-get_3_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    put:
      tags:
        - user configuration
      description: update-user-by-userconfiguration-Id
      operationId: createPropertyReference-userconfiguration-put_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
        - user configuration
      description: delete-user-by-userconfiguration-Id
      operationId: deletePropertyReference-userconfiguration-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user configuration
      description: patch-user-by-userconfiguration-Id
      operationId: createPropertyReference-userconfiguration-patch_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
  /api/user-configurations/{id}/user/{propertyId}:
    get:
      tags:
        - user configuration
      description: get-user-by-userconfiguration-Id
      operationId: followPropertyReference-userconfiguration-get_3
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
        - user configuration
      description: delete-user-by-userconfiguration-Id
      operationId: deletePropertyReferenceId-userconfiguration-delete_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/user-positions:
    get:
      tags:
        - user position
      description: get-userposition
      operationId: getCollectionResource-userposition-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUserPosition'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUserPosition'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUserPosition'
    post:
      tags:
        - user position
      description: create-userposition
      operationId: postCollectionResource-userposition-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPosition'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPosition'
  /api/user-positions/{id}:
    get:
      tags:
        - user position
      description: get-userposition
      operationId: getItemResource-userposition-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPosition'
        "404":
          description: Not Found
    put:
      tags:
        - user position
      description: update-userposition
      operationId: putItemResource-userposition-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPosition'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPosition'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPosition'
        "204":
          description: No Content
    delete:
      tags:
        - user position
      description: delete-userposition
      operationId: deleteItemResource-userposition-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user position
      description: patch-userposition
      operationId: patchItemResource-userposition-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserPosition'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUserPosition'
        "204":
          description: No Content
  /api/user-positions/{id}/territory:
    get:
      tags:
        - user position
      description: get-territory-by-userposition-Id
      operationId: followPropertyReference-userposition-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    put:
      tags:
        - user position
      description: update-territory-by-userposition-Id
      operationId: createPropertyReference-userposition-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
    delete:
      tags:
        - user position
      description: delete-territory-by-userposition-Id
      operationId: deletePropertyReference-userposition-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user position
      description: patch-territory-by-userposition-Id
      operationId: createPropertyReference-userposition-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "204":
          description: No Content
  /api/user-positions/{id}/territory/{propertyId}:
    get:
      tags:
        - user position
      description: get-territory-by-userposition-Id
      operationId: followPropertyReference-userposition-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelTerritory'
        "404":
          description: Not Found
    delete:
      tags:
        - user position
      description: delete-territory-by-userposition-Id
      operationId: deletePropertyReferenceId-userposition-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/user-positions/{id}/user:
    get:
      tags:
        - user position
      description: get-user-by-userposition-Id
      operationId: followPropertyReference-userposition-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    put:
      tags:
        - user position
      description: update-user-by-userposition-Id
      operationId: createPropertyReference-userposition-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
        - user position
      description: delete-user-by-userposition-Id
      operationId: deletePropertyReference-userposition-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user position
      description: patch-user-by-userposition-Id
      operationId: createPropertyReference-userposition-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
  /api/user-positions/{id}/user/{propertyId}:
    get:
      tags:
        - user position
      description: get-user-by-userposition-Id
      operationId: followPropertyReference-userposition-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    delete:
      tags:
        - user position
      description: delete-user-by-userposition-Id
      operationId: deletePropertyReferenceId-userposition-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/users:
    get:
      tags:
        - user
      description: get-user
      operationId: getCollectionResource-user-get_1
      parameters:
        - name: page
          in: query
          description: Zero-based page index (0..N)
          required: false
          schema:
            minimum: 0
            type: integer
            default: 0
        - name: size
          in: query
          description: The size of the page to be returned
          required: false
          schema:
            minimum: 1
            type: integer
            default: 20
        - name: sort
          in: query
          description: "Sorting criteria in the format: property(,asc|desc). Default\
          \ sort order is ascending. Multiple sort criteria are supported."
          required: false
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUser'
            application/x-spring-data-compact+json:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUser'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelEntityModelUser'
    post:
      tags:
        - user
      description: create-user
      operationId: postCollectionResource-user-post
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
  /api/users/search/usersByCreatedDateSinceDate:
    get:
      tags:
        - user
      operationId: executeSearch-user-get
      parameters:
        - name: sinceDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUser'
        "404":
          description: Not Found
  /api/users/search/usersPerApplicationSinceDate:
    get:
      tags:
        - user
      operationId: executeSearch-user-get_1
      parameters:
        - name: sinceDate
          in: query
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUser'
        "404":
          description: Not Found
  /api/users/{id}:
    get:
      tags:
        - user
      description: get-user
      operationId: getItemResource-user-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "404":
          description: Not Found
    put:
      tags:
        - user
      description: update-user
      operationId: putItemResource-user-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
    delete:
      tags:
        - user
      description: delete-user
      operationId: deleteItemResource-user-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user
      description: patch-user
      operationId: patchItemResource-user-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/EntityModelUser'
        "204":
          description: No Content
  /api/users/{id}/permissions:
    get:
      tags:
        - user
      description: get-userconfiguration-by-user-Id
      operationId: followPropertyReference-user-get_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "404":
          description: Not Found
    put:
      tags:
        - user
      description: update-userconfiguration-by-user-Id
      operationId: createPropertyReference-user-put
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "204":
          description: No Content
    delete:
      tags:
        - user
      description: delete-userconfiguration-by-user-Id
      operationId: deletePropertyReference-user-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user
      description: patch-userconfiguration-by-user-Id
      operationId: createPropertyReference-user-patch
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "204":
          description: No Content
  /api/users/{id}/permissions/{propertyId}:
    get:
      tags:
        - user
      description: get-userconfiguration-by-user-Id
      operationId: followPropertyReference-user-get
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserConfiguration'
        "404":
          description: Not Found
    delete:
      tags:
        - user
      description: delete-userconfiguration-by-user-Id
      operationId: deletePropertyReferenceId-user-delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
  /api/users/{id}/positions:
    get:
      tags:
        - user
      description: get-userposition-by-user-Id
      operationId: followPropertyReference-user-get_2_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
            text/uri-list:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "404":
          description: Not Found
    put:
      tags:
        - user
      description: update-userposition-by-user-Id
      operationId: createPropertyReference-user-put_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "201":
          description: Created
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "204":
          description: No Content
    delete:
      tags:
        - user
      description: delete-userposition-by-user-Id
      operationId: deletePropertyReference-user-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
    patch:
      tags:
        - user
      description: patch-userposition-by-user-Id
      operationId: createPropertyReference-user-patch_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          application/x-spring-data-compact+json:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
          text/uri-list:
            schema:
              $ref: '#/components/schemas/CollectionModelObject'
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "204":
          description: No Content
  /api/users/{id}/positions/{propertyId}:
    get:
      tags:
        - user
      description: get-userposition-by-user-Id
      operationId: followPropertyReference-user-get_2
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelUserPosition'
        "404":
          description: Not Found
    delete:
      tags:
        - user
      description: delete-userposition-by-user-Id
      operationId: deletePropertyReferenceId-user-delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: propertyId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
components:
  schemas:
    Application:
      required:
        - createdDate
        - jspTemplate
        - name
        - type
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        title:
          type: string
        theme:
          type: string
        scales:
          type: array
          items:
            type: string
        srs:
          type: string
        jspTemplate:
          type: string
        treeAutoRefresh:
          type: boolean
        accessParentTerritory:
          type: boolean
        accessChildrenTerritory:
          type: boolean
        situationMap:
          $ref: '#/components/schemas/CartographyPermission'
        createdDate:
          type: string
          format: date-time
        parameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationParameter'
        availableRoles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        trees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tree'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationBackground'
    ApplicationBackground:
      required:
        - application
        - background
      type: object
      properties:
        id:
          type: integer
          format: int32
        application:
          $ref: '#/components/schemas/Application'
        background:
          $ref: '#/components/schemas/Background'
        order:
          type: integer
          format: int32
    ApplicationParameter:
      required:
        - application
        - name
        - type
        - value
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        type:
          type: string
        application:
          $ref: '#/components/schemas/Application'
    Background:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        image:
          type: string
        description:
          type: string
        active:
          type: boolean
        createdDate:
          type: string
          format: date-time
        cartographyGroup:
          $ref: '#/components/schemas/CartographyPermission'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationBackground'
    Cartography:
      required:
        - blocked
        - layers
        - name
        - queryableFeatureAvailable
        - queryableFeatureEnabled
        - service
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        layers:
          type: array
          items:
            type: string
        minimumScale:
          type: integer
          format: int32
        maximumScale:
          type: integer
          format: int32
        order:
          type: integer
          format: int32
        transparency:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        applyFilterToGetMap:
          type: boolean
        queryableFeatureAvailable:
          type: boolean
        queryableFeatureEnabled:
          type: boolean
        queryableLayers:
          type: array
          items:
            type: string
        applyFilterToGetFeatureInfo:
          type: boolean
        type:
          type: string
        service:
          $ref: '#/components/schemas/Service'
        selectableFeatureEnabled:
          type: boolean
        selectableLayers:
          type: array
          items:
            type: string
        applyFilterToSpatialSelection:
          type: boolean
        spatialSelectionService:
          $ref: '#/components/schemas/Service'
        legendType:
          type: string
        legendURL:
          type: string
        createdDate:
          type: string
          format: date-time
        spatialSelectionConnection:
          $ref: '#/components/schemas/DatabaseConnection'
        metadataURL:
          type: string
        datasetURL:
          type: string
        thematic:
          type: boolean
        geometryType:
          type: string
        source:
          type: string
        availabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyAvailability'
        styles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyStyle'
        defaultStyle:
          $ref: '#/components/schemas/CartographyStyle'
        blocked:
          type: boolean
        filters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyFilter'
        parameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyParameter'
        treeNodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TreeNode'
        permissions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyPermission'
    CartographyAvailability:
      required:
        - cartography
        - territory
      type: object
      properties:
        id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        owner:
          type: string
        territory:
          $ref: '#/components/schemas/Territory'
        cartography:
          $ref: '#/components/schemas/Cartography'
    CartographyFilter:
      required:
        - cartography
        - name
        - required
        - type
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        required:
          type: boolean
        type:
          type: string
        territorialLevel:
          $ref: '#/components/schemas/TerritoryType'
        column:
          type: string
        values:
          type: array
          items:
            type: string
        valueType:
          type: string
        cartography:
          $ref: '#/components/schemas/Cartography'
    CartographyParameter:
      required:
        - cartography
        - name
        - type
        - value
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        format:
          type: string
        type:
          type: string
        cartography:
          $ref: '#/components/schemas/Cartography'
        order:
          minimum: 0
          type: integer
          format: int32
    CartographyPermission:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Cartography'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Background'
        applications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application'
    CartographyStyle:
      required:
        - cartography
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        description:
          type: string
        legendURL:
          $ref: '#/components/schemas/LegendURL'
        cartography:
          $ref: '#/components/schemas/Cartography'
    DatabaseConnection:
      required:
        - driver
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        driver:
          type: string
        user:
          type: string
        password:
          type: string
          writeOnly: true
        url:
          type: string
        tasks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task'
        cartographies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Cartography'
        passwordSet:
          type: boolean
    LegendURL:
      required:
        - onlineResource
      type: object
      properties:
        width:
          minimum: 1
          type: integer
          format: int32
        height:
          minimum: 1
          type: integer
          format: int32
        format:
          type: string
        onlineResource:
          type: string
    Role:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        applications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application'
        tasks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task'
        permissions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyPermission'
        trees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tree'
        userConfigurations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration'
    Service:
      required:
        - blocked
        - name
        - serviceURL
        - type
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        serviceURL:
          type: string
        supportedSRS:
          type: array
          items:
            type: string
        legendURL:
          type: string
        getInformationURL:
          type: string
        createdDate:
          type: string
          format: date-time
        type:
          type: string
        nativeProtocol:
          type: string
        blocked:
          type: boolean
        layers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Cartography'
        parameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceParameter'
    ServiceParameter:
      required:
        - name
        - service
        - type
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        type:
          type: string
        service:
          $ref: '#/components/schemas/Service'
    Task:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        parent:
          $ref: '#/components/schemas/Task'
        children:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task'
        name:
          type: string
        createdDate:
          type: string
          format: date-time
        order:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: object
        cartography:
          $ref: '#/components/schemas/Cartography'
        service:
          $ref: '#/components/schemas/Service'
        group:
          $ref: '#/components/schemas/TaskGroup'
        type:
          $ref: '#/components/schemas/TaskType'
        ui:
          $ref: '#/components/schemas/TaskUI'
        connection:
          $ref: '#/components/schemas/DatabaseConnection'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        availabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaskAvailability'
    TaskAvailability:
      required:
        - task
        - territory
      type: object
      properties:
        id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        territory:
          $ref: '#/components/schemas/Territory'
        task:
          $ref: '#/components/schemas/Task'
    TaskGroup:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    TaskType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        enabled:
          type: boolean
        parent:
          $ref: '#/components/schemas/TaskType'
        order:
          type: integer
          format: int32
        children:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaskType'
        specification:
          type: object
          additionalProperties:
            type: object
        folder:
          type: boolean
    TaskUI:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        tooltip:
          type: string
        order:
          minimum: 0
          type: integer
          format: int32
    Territory:
      required:
        - blocked
        - code
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        territorialAuthorityName:
          type: string
        territorialAuthorityAddress:
          type: string
        territorialAuthorityEmail:
          type: string
        territorialAuthorityLogo:
          type: string
        scope:
          type: string
        extent:
          type: string
        blocked:
          type: boolean
        type:
          $ref: '#/components/schemas/TerritoryType'
        note:
          type: string
        createdDate:
          type: string
          format: date-time
        groupType:
          $ref: '#/components/schemas/TerritoryGroupType'
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Territory'
        memberOf:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Territory'
        taskAvailabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaskAvailability'
        cartographyAvailabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyAvailability'
        positions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserPosition'
        userConfigurations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration'
    TerritoryGroupType:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    TerritoryType:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    Tree:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        image:
          type: string
        description:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        allNodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TreeNode'
        availableRoles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        availableApplications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application'
    TreeNode:
      required:
        - name
        - tree
      type: object
      properties:
        id:
          type: integer
          format: int32
        parent:
          $ref: '#/components/schemas/TreeNode'
        name:
          type: string
        description:
          type: string
        tooltip:
          type: string
        active:
          type: boolean
        radio:
          type: boolean
        order:
          type: integer
          format: int32
        metadataURL:
          type: string
        datasetURL:
          type: string
        filterGetMap:
          type: boolean
        filterGetFeatureInfo:
          type: boolean
        queryableActive:
          type: boolean
        filterSelectable:
          type: boolean
        tree:
          $ref: '#/components/schemas/Tree'
        cartography:
          $ref: '#/components/schemas/Cartography'
        cartographyId:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int32
    User:
      required:
        - administrator
        - blocked
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
          writeOnly: true
        firstName:
          type: string
        lastName:
          type: string
        identificationNumber:
          type: string
        identificationType:
          type: string
        administrator:
          type: boolean
        blocked:
          type: boolean
        generic:
          type: boolean
        createdDate:
          type: string
          format: date-time
        positions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserPosition'
        permissions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration'
        passwordSet:
          type: boolean
    UserConfiguration:
      required:
        - appliesToChildrenTerritories
        - role
        - territory
        - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/User'
        territory:
          $ref: '#/components/schemas/Territory'
        role:
          $ref: '#/components/schemas/Role'
        appliesToChildrenTerritories:
          type: boolean
        createdDate:
          type: string
          format: date-time
    UserPosition:
      required:
        - territory
        - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        organization:
          type: string
        email:
          type: string
        createdDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        type:
          type: string
        user:
          $ref: '#/components/schemas/User'
        territory:
          $ref: '#/components/schemas/Territory'
    LoginRequest:
      required:
        - password
        - username
      type: object
      properties:
        username:
          maxLength: 50
          minLength: 1
          type: string
          description: User identifier. It cannot be empty
          example: some_user
        password:
          type: string
          description: Password
          example: some_password
    JWTToken:
      type: object
      properties:
        id_token:
          type: string
    ApplicationBackground_View:
      required:
        - application
        - background
      type: object
      properties:
        id:
          type: integer
          format: int32
        application:
          $ref: '#/components/schemas/Application_View'
        background:
          $ref: '#/components/schemas/Background_View'
        order:
          type: integer
          format: int32
    ApplicationParameter_View:
      required:
        - application
        - name
        - type
        - value
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        type:
          type: string
        application:
          $ref: '#/components/schemas/Application_View'
    Application_View:
      required:
        - createdDate
        - jspTemplate
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        theme:
          type: string
        jspTemplate:
          type: string
        treeAutoRefresh:
          type: boolean
        accessParentTerritory:
          type: boolean
        accessChildrenTerritory:
          type: boolean
        situationMap:
          $ref: '#/components/schemas/CartographyPermission_View'
        createdDate:
          type: string
          format: date-time
        parameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationParameter_View'
        availableRoles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role_View'
        trees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tree_View'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationBackground_View'
    Background_View:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        image:
          type: string
        description:
          type: string
        active:
          type: boolean
        createdDate:
          type: string
          format: date-time
        cartographyGroup:
          $ref: '#/components/schemas/CartographyPermission_View'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationBackground_View'
    CartographyAvailability_View:
      required:
        - cartography
        - territory
      type: object
      properties:
        id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        owner:
          type: string
        territory:
          $ref: '#/components/schemas/Territory_View'
        cartography:
          $ref: '#/components/schemas/Cartography_View'
    CartographyFilter_View:
      required:
        - cartography
        - name
        - required
        - type
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        required:
          type: boolean
        type:
          type: string
        territorialLevel:
          $ref: '#/components/schemas/TerritoryType_View'
        column:
          type: string
        values:
          type: array
          items:
            type: string
        valueType:
          type: string
        cartography:
          $ref: '#/components/schemas/Cartography_View'
    CartographyParameter_View:
      required:
        - cartography
        - name
        - type
        - value
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        format:
          type: string
        type:
          type: string
        cartography:
          $ref: '#/components/schemas/Cartography_View'
        order:
          minimum: 0
          type: integer
          format: int32
    CartographyPermission_View:
      type: object
      properties:
        type:
          type: string
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role_View'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Background_View'
        applications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application_View'
    CartographyStyle_View:
      required:
        - cartography
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        description:
          type: string
        legendURL:
          $ref: '#/components/schemas/LegendURL_View'
        cartography:
          $ref: '#/components/schemas/Cartography_View'
    Cartography_View:
      required:
        - blocked
        - queryableFeatureAvailable
        - queryableFeatureEnabled
      type: object
      properties:
        applyFilterToGetMap:
          type: boolean
        queryableFeatureAvailable:
          type: boolean
        queryableFeatureEnabled:
          type: boolean
        queryableLayers:
          type: array
          items:
            type: string
        applyFilterToGetFeatureInfo:
          type: boolean
        type:
          type: string
        selectableFeatureEnabled:
          type: boolean
        selectableLayers:
          type: array
          items:
            type: string
        applyFilterToSpatialSelection:
          type: boolean
        spatialSelectionService:
          $ref: '#/components/schemas/Service_View'
        legendType:
          type: string
        legendURL:
          type: string
        createdDate:
          type: string
          format: date-time
        spatialSelectionConnection:
          $ref: '#/components/schemas/DatabaseConnection_View'
        metadataURL:
          type: string
        datasetURL:
          type: string
        thematic:
          type: boolean
        geometryType:
          type: string
        source:
          type: string
        availabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyAvailability_View'
        styles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyStyle_View'
        defaultStyle:
          $ref: '#/components/schemas/CartographyStyle_View'
        blocked:
          type: boolean
        filters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyFilter_View'
        parameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyParameter_View'
        treeNodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TreeNode_View'
        permissions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyPermission_View'
    ConfigurationParameter_View:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
    DatabaseConnection_View:
      required:
        - driver
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        driver:
          type: string
        user:
          type: string
        password:
          type: string
          writeOnly: true
        url:
          type: string
        tasks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task_View'
        cartographies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Cartography_View'
        passwordSet:
          type: boolean
    LegendURL_View:
      required:
        - onlineResource
      type: object
      properties:
        width:
          minimum: 1
          type: integer
          format: int32
        height:
          minimum: 1
          type: integer
          format: int32
        format:
          type: string
        onlineResource:
          type: string
    Role_View:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        applications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application_View'
        userConfigurations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration_View'
    Service_View:
      required:
        - blocked
      type: object
      properties:
        description:
          type: string
        createdDate:
          type: string
          format: date-time
        nativeProtocol:
          type: string
        blocked:
          type: boolean
        layers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Cartography_View'
    TaskAvailability_View:
      required:
        - task
        - territory
      type: object
      properties:
        id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        territory:
          $ref: '#/components/schemas/Territory_View'
        task:
          $ref: '#/components/schemas/Task_View'
    TaskUI_View:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        tooltip:
          type: string
        order:
          minimum: 0
          type: integer
          format: int32
    Task_View:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/Task_View'
        children:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task_View'
        createdDate:
          type: string
          format: date-time
        order:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: object
        cartography:
          $ref: '#/components/schemas/Cartography_View'
        service:
          $ref: '#/components/schemas/Service_View'
        ui:
          $ref: '#/components/schemas/TaskUI_View'
        connection:
          $ref: '#/components/schemas/DatabaseConnection_View'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role_View'
        availabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaskAvailability_View'
    TerritoryType_View:
      type: object
      properties:
        id:
          type: integer
          format: int32
    Territory_View:
      required:
        - blocked
        - code
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        blocked:
          type: boolean
        note:
          type: string
        createdDate:
          type: string
          format: date-time
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Territory_View'
        memberOf:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Territory_View'
        taskAvailabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaskAvailability_View'
        cartographyAvailabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyAvailability_View'
        positions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserPosition_View'
        userConfigurations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration_View'
    TreeNode_View:
      required:
        - tree
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/TreeNode_View'
        description:
          type: string
        tooltip:
          type: string
        active:
          type: boolean
        radio:
          type: boolean
        order:
          type: integer
          format: int32
        metadataURL:
          type: string
        datasetURL:
          type: string
        filterGetMap:
          type: boolean
        filterGetFeatureInfo:
          type: boolean
        queryableActive:
          type: boolean
        filterSelectable:
          type: boolean
        tree:
          $ref: '#/components/schemas/Tree_View'
        cartography:
          $ref: '#/components/schemas/Cartography_View'
    Tree_View:
      type: object
      properties:
        owner:
          $ref: '#/components/schemas/User_View'
        availableRoles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role_View'
        availableApplications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application_View'
    UserConfiguration_View:
      required:
        - appliesToChildrenTerritories
        - role
        - territory
        - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/User_View'
        territory:
          $ref: '#/components/schemas/Territory_View'
        role:
          $ref: '#/components/schemas/Role_View'
        appliesToChildrenTerritories:
          type: boolean
        createdDate:
          type: string
          format: date-time
    UserPosition_View:
      required:
        - territory
        - user
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        organization:
          type: string
        email:
          type: string
        createdDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        type:
          type: string
        user:
          $ref: '#/components/schemas/User_View'
        territory:
          $ref: '#/components/schemas/Territory_View'
    User_View:
      required:
        - administrator
        - blocked
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
          writeOnly: true
        firstName:
          type: string
        lastName:
          type: string
        identificationNumber:
          type: string
        identificationType:
          type: string
        administrator:
          type: boolean
        blocked:
          type: boolean
        generic:
          type: boolean
        createdDate:
          type: string
          format: date-time
        positions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserPosition_View'
        permissions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration_View'
        passwordSet:
          type: boolean
    Workspace_View:
      type: object
      properties:
        territories:
          type: array
          items:
            $ref: '#/components/schemas/Territory_View'
        config:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationParameter_View'
    WorkspaceApplication_View:
      type: object
      properties:
        territory:
          $ref: '#/components/schemas/Territory_View'
        application:
          $ref: '#/components/schemas/Application_View'
        roles:
          type: array
          items:
            $ref: '#/components/schemas/Role_View'
        config:
          type: array
          items:
            $ref: '#/components/schemas/ConfigurationParameter_View'
    AbstractJsonSchemaPropertyObject:
      type: object
      properties:
        title:
          type: string
        readOnly:
          type: boolean
    Item:
      type: object
      properties:
        type:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
    JsonSchema:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        properties:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/AbstractJsonSchemaPropertyObject'
        requiredProperties:
          type: array
          items:
            type: string
        definitions:
          type: object
          additionalProperties:
            $ref: '#/components/schemas/Item'
        type:
          type: string
        $schema:
          type: string
    Link:
      type: object
      properties:
        href:
          type: string
        hreflang:
          type: string
        title:
          type: string
        type:
          type: string
        deprecation:
          type: string
        profile:
          type: string
        name:
          type: string
        templated:
          type: boolean
    RepresentationModelObject:
      type: object
      properties:
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelCartographyStyle:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        description:
          type: string
        legendURL:
          $ref: '#/components/schemas/LegendURL'
        cartography:
          $ref: '#/components/schemas/Cartography'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelCartographyStyle:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-styles:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCartographyStyle'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelCartography:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        layers:
          type: array
          items:
            type: string
        minimumScale:
          type: integer
          format: int32
        maximumScale:
          type: integer
          format: int32
        order:
          type: integer
          format: int32
        transparency:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        applyFilterToGetMap:
          type: boolean
        queryableFeatureAvailable:
          type: boolean
        queryableFeatureEnabled:
          type: boolean
        queryableLayers:
          type: array
          items:
            type: string
        applyFilterToGetFeatureInfo:
          type: boolean
        type:
          type: string
        service:
          $ref: '#/components/schemas/Service'
        selectableFeatureEnabled:
          type: boolean
        selectableLayers:
          type: array
          items:
            type: string
        applyFilterToSpatialSelection:
          type: boolean
        spatialSelectionService:
          $ref: '#/components/schemas/Service'
        legendType:
          type: string
        legendURL:
          type: string
        createdDate:
          type: string
          format: date-time
        spatialSelectionConnection:
          $ref: '#/components/schemas/DatabaseConnection'
        metadataURL:
          type: string
        datasetURL:
          type: string
        thematic:
          type: boolean
        geometryType:
          type: string
        source:
          type: string
        availabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyAvailability'
        styles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyStyle'
        defaultStyle:
          $ref: '#/components/schemas/CartographyStyle'
        blocked:
          type: boolean
        filters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyFilter'
        parameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyParameter'
        treeNodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TreeNode'
        permissions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyPermission'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelObject:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            objects:
              type: array
              items:
                type: object
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelCartography:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartographies:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCartography'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelDatabaseConnection:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        driver:
          type: string
        user:
          type: string
        password:
          type: string
          writeOnly: true
        url:
          type: string
        tasks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task'
        cartographies:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Cartography'
        passwordSet:
          type: boolean
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelCartographyPermission:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-groups:
              type: array
              items:
                $ref: '#/components/schemas/CartographyPermission'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelTreeNode:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            tree-nodes:
              type: array
              items:
                $ref: '#/components/schemas/TreeNode'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelService:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        serviceURL:
          type: string
        supportedSRS:
          type: array
          items:
            type: string
        legendURL:
          type: string
        getInformationURL:
          type: string
        createdDate:
          type: string
          format: date-time
        type:
          type: string
        nativeProtocol:
          type: string
        blocked:
          type: boolean
        layers:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Cartography'
        parameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ServiceParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelCartographyAvailability:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-availabilities:
              type: array
              items:
                $ref: '#/components/schemas/CartographyAvailability'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelCartographyFilter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-filters:
              type: array
              items:
                $ref: '#/components/schemas/CartographyFilter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelCartographyParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-parameters:
              type: array
              items:
                $ref: '#/components/schemas/CartographyParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelCartographyStyle:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-styles:
              type: array
              items:
                $ref: '#/components/schemas/CartographyStyle'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelCartography:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartographies:
              type: array
              items:
                $ref: '#/components/schemas/Cartography'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelRole:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        applications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application'
        tasks:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task'
        permissions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyPermission'
        trees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tree'
        userConfigurations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelRole:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            roles:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelRole'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelUserConfiguration:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            user-configurations:
              type: array
              items:
                $ref: '#/components/schemas/UserConfiguration'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelApplication:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            applications:
              type: array
              items:
                $ref: '#/components/schemas/Application'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelTask:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/Task'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelTree:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            trees:
              type: array
              items:
                $ref: '#/components/schemas/Tree'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    DownloadTask:
      required:
        - format
        - path
        - scope
      type: object
      properties:
        id:
          type: integer
          format: int32
        format:
          type: string
        scope:
          type: string
        path:
          type: string
    EntityModelDownloadTask:
      type: object
      properties:
        id:
          type: integer
          format: int32
        format:
          type: string
        scope:
          type: string
        path:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelDownloadTask:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            downloadTasks:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelDownloadTask'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelCartographyFilter:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        required:
          type: boolean
        type:
          type: string
        territorialLevel:
          $ref: '#/components/schemas/TerritoryType'
        column:
          type: string
        values:
          type: array
          items:
            type: string
        valueType:
          type: string
        cartography:
          $ref: '#/components/schemas/Cartography'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelCartographyFilter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-filters:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCartographyFilter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTerritoryType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelCartographyAvailability:
      type: object
      properties:
        id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        owner:
          type: string
        territory:
          $ref: '#/components/schemas/Territory'
        cartography:
          $ref: '#/components/schemas/Cartography'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelCartographyAvailability:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-availabilities:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCartographyAvailability'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTerritory:
      type: object
      properties:
        id:
          type: integer
          format: int32
        code:
          type: string
        name:
          type: string
        territorialAuthorityName:
          type: string
        territorialAuthorityAddress:
          type: string
        territorialAuthorityEmail:
          type: string
        territorialAuthorityLogo:
          type: string
        scope:
          type: string
        extent:
          type: string
        blocked:
          type: boolean
        type:
          $ref: '#/components/schemas/TerritoryType'
        note:
          type: string
        createdDate:
          type: string
          format: date-time
        groupType:
          $ref: '#/components/schemas/TerritoryGroupType'
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Territory'
        memberOf:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Territory'
        taskAvailabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaskAvailability'
        cartographyAvailabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/CartographyAvailability'
        positions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserPosition'
        userConfigurations:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelServiceParameter:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        type:
          type: string
        service:
          $ref: '#/components/schemas/Service'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelServiceParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            service-parameters:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelServiceParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelUser:
      type: object
      properties:
        id:
          type: integer
          format: int32
        username:
          type: string
        password:
          type: string
          writeOnly: true
        firstName:
          type: string
        lastName:
          type: string
        identificationNumber:
          type: string
        identificationType:
          type: string
        administrator:
          type: boolean
        blocked:
          type: boolean
        generic:
          type: boolean
        createdDate:
          type: string
          format: date-time
        positions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserPosition'
        permissions:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/UserConfiguration'
        passwordSet:
          type: boolean
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelUser:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUser'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelUserPosition:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            user-positions:
              type: array
              items:
                $ref: '#/components/schemas/UserPosition'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelUser:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            users:
              type: array
              items:
                $ref: '#/components/schemas/User'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTaskGroup:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTaskGroup:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            task-groups:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTaskGroup'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelUserConfiguration:
      type: object
      properties:
        id:
          type: integer
          format: int32
        user:
          $ref: '#/components/schemas/User'
        territory:
          $ref: '#/components/schemas/Territory'
        role:
          $ref: '#/components/schemas/Role'
        appliesToChildrenTerritories:
          type: boolean
        createdDate:
          type: string
          format: date-time
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelUserConfiguration:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            user-configurations:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUserConfiguration'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelApplication:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        title:
          type: string
        theme:
          type: string
        scales:
          type: array
          items:
            type: string
        srs:
          type: string
        jspTemplate:
          type: string
        treeAutoRefresh:
          type: boolean
        accessParentTerritory:
          type: boolean
        accessChildrenTerritory:
          type: boolean
        situationMap:
          $ref: '#/components/schemas/CartographyPermission'
        createdDate:
          type: string
          format: date-time
        parameters:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationParameter'
        availableRoles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        trees:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Tree'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationBackground'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelApplication:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            applications:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelApplication'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelApplicationBackground:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            application-backgrounds:
              type: array
              items:
                $ref: '#/components/schemas/ApplicationBackground'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelApplicationParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            application-parameters:
              type: array
              items:
                $ref: '#/components/schemas/ApplicationParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelCartographyPermission:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        type:
          type: string
        members:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Cartography'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Background'
        applications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelRole:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            roles:
              type: array
              items:
                $ref: '#/components/schemas/Role'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTreeNode:
      type: object
      properties:
        id:
          type: integer
          format: int32
        parent:
          $ref: '#/components/schemas/TreeNode'
        name:
          type: string
        description:
          type: string
        tooltip:
          type: string
        active:
          type: boolean
        radio:
          type: boolean
        order:
          type: integer
          format: int32
        metadataURL:
          type: string
        datasetURL:
          type: string
        filterGetMap:
          type: boolean
        filterGetFeatureInfo:
          type: boolean
        queryableActive:
          type: boolean
        filterSelectable:
          type: boolean
        tree:
          $ref: '#/components/schemas/Tree'
        cartography:
          $ref: '#/components/schemas/Cartography'
        cartographyId:
          type: integer
          format: int32
        parentId:
          type: integer
          format: int32
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTreeNode:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            tree-nodes:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTreeNode'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTree:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        image:
          type: string
        description:
          type: string
        owner:
          $ref: '#/components/schemas/User'
        allNodes:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TreeNode'
        availableRoles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        availableApplications:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Application'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTaskAvailability:
      type: object
      properties:
        id:
          type: integer
          format: int32
        createdDate:
          type: string
          format: date-time
        territory:
          $ref: '#/components/schemas/Territory'
        task:
          $ref: '#/components/schemas/Task'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTaskAvailability:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            task-availabilities:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTaskAvailability'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTask:
      type: object
      properties:
        id:
          type: integer
          format: int32
        parent:
          $ref: '#/components/schemas/Task'
        children:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Task'
        name:
          type: string
        createdDate:
          type: string
          format: date-time
        order:
          type: integer
          format: int32
        properties:
          type: object
          additionalProperties:
            type: object
        cartography:
          $ref: '#/components/schemas/Cartography'
        service:
          $ref: '#/components/schemas/Service'
        group:
          $ref: '#/components/schemas/TaskGroup'
        type:
          $ref: '#/components/schemas/TaskType'
        ui:
          $ref: '#/components/schemas/TaskUI'
        connection:
          $ref: '#/components/schemas/DatabaseConnection'
        roles:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/Role'
        availabilities:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaskAvailability'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    TaskParameter:
      required:
        - name
        - task
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        type:
          type: string
        order:
          minimum: 0
          type: integer
          format: int32
        format:
          type: string
        help:
          type: string
        select:
          type: string
        selectable:
          type: boolean
        editable:
          type: boolean
        required:
          type: boolean
        defaultValue:
          type: string
        maxLength:
          minimum: 1
          type: integer
          format: int32
        relationAttributes:
          type: string
        relationAttributesRole:
          type: string
        task:
          $ref: '#/components/schemas/Task'
    EntityModelTaskParameter:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        type:
          type: string
        order:
          minimum: 0
          type: integer
          format: int32
        format:
          type: string
        help:
          type: string
        select:
          type: string
        selectable:
          type: boolean
        editable:
          type: boolean
        required:
          type: boolean
        defaultValue:
          type: string
        maxLength:
          minimum: 1
          type: integer
          format: int32
        relationAttributes:
          type: string
        relationAttributesRole:
          type: string
        task:
          $ref: '#/components/schemas/Task'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTaskParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            taskParameters:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTaskParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelTaskParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            taskParameters:
              type: array
              items:
                $ref: '#/components/schemas/TaskParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Log:
      type: object
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        type:
          type: string
        user:
          $ref: '#/components/schemas/User'
        application:
          $ref: '#/components/schemas/Application'
        territory:
          $ref: '#/components/schemas/Territory'
        task:
          $ref: '#/components/schemas/Task'
        cartography:
          $ref: '#/components/schemas/Cartography'
        counter:
          type: integer
          format: int32
        territoryCode:
          type: string
        territories:
          type: array
          items:
            type: string
        data:
          type: string
        srs:
          type: string
        format:
          type: string
        buffer:
          type: boolean
        email:
          type: string
        other:
          type: string
    EntityModelLog:
      type: object
      properties:
        id:
          type: integer
          format: int32
        date:
          type: string
          format: date-time
        type:
          type: string
        user:
          $ref: '#/components/schemas/User'
        application:
          $ref: '#/components/schemas/Application'
        territory:
          $ref: '#/components/schemas/Territory'
        task:
          $ref: '#/components/schemas/Task'
        cartography:
          $ref: '#/components/schemas/Cartography'
        counter:
          type: integer
          format: int32
        territoryCode:
          type: string
        territories:
          type: array
          items:
            type: string
        data:
          type: string
        srs:
          type: string
        format:
          type: string
        buffer:
          type: boolean
        email:
          type: string
        other:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelLog:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            logs:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLog'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    ThematicMap:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        type:
          type: string
        ranges:
          minimum: 1
          type: integer
          format: int32
        startColor:
          type: string
        endColor:
          type: string
        borderMinSize:
          minimum: 0
          type: integer
          format: int32
        borderMaxSize:
          minimum: 0
          type: integer
          format: int32
        transparency:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        refreshData:
          type: boolean
        recreateRanges:
          type: boolean
        user:
          $ref: '#/components/schemas/User'
        cartography:
          $ref: '#/components/schemas/Cartography'
        task:
          $ref: '#/components/schemas/Task'
        taggable:
          type: boolean
        valueType:
          type: string
        url:
          type: string
        destination:
          type: string
        expirationDate:
          type: string
          format: date-time
    EntityModelThematicMap:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        description:
          type: string
        type:
          type: string
        ranges:
          minimum: 1
          type: integer
          format: int32
        startColor:
          type: string
        endColor:
          type: string
        borderMinSize:
          minimum: 0
          type: integer
          format: int32
        borderMaxSize:
          minimum: 0
          type: integer
          format: int32
        transparency:
          maximum: 100
          minimum: 0
          type: integer
          format: int32
        refreshData:
          type: boolean
        recreateRanges:
          type: boolean
        user:
          $ref: '#/components/schemas/User'
        cartography:
          $ref: '#/components/schemas/Cartography'
        task:
          $ref: '#/components/schemas/Task'
        taggable:
          type: boolean
        valueType:
          type: string
        url:
          type: string
        destination:
          type: string
        expirationDate:
          type: string
          format: date-time
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelThematicMap:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            thematicMaps:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelThematicMap'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    ThematicMapRange:
      type: object
      properties:
        map:
          $ref: '#/components/schemas/ThematicMap'
        position:
          minimum: 0
          type: integer
          format: int32
        name:
          type: string
        allowNullValues:
          type: boolean
        value:
          type: string
        minimumValue:
          type: number
        maximumValue:
          type: number
        fillStyle:
          type: string
        fillColor:
          type: string
        borderStyle:
          type: string
        borderColor:
          type: string
        borderSize:
          type: integer
          format: int32
        description:
          type: string
    EntityModelThematicMapRange:
      type: object
      properties:
        map:
          $ref: '#/components/schemas/ThematicMap'
        position:
          minimum: 0
          type: integer
          format: int32
        name:
          type: string
        allowNullValues:
          type: boolean
        value:
          type: string
        minimumValue:
          type: number
        maximumValue:
          type: number
        fillStyle:
          type: string
        fillColor:
          type: string
        borderStyle:
          type: string
        borderColor:
          type: string
        borderSize:
          type: integer
          format: int32
        description:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelThematicMapRange:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            thematicMapRanges:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelThematicMapRange'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Comment:
      required:
        - coordinateX
        - coordinateY
      type: object
      properties:
        id:
          type: integer
          format: int32
        coordinateX:
          type: number
          format: double
        coordinateY:
          type: number
          format: double
        name:
          type: string
        email:
          type: string
        title:
          type: string
        description:
          type: string
        createdDate:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        application:
          $ref: '#/components/schemas/Application'
    EntityModelComment:
      type: object
      properties:
        id:
          type: integer
          format: int32
        coordinateX:
          type: number
          format: double
        coordinateY:
          type: number
          format: double
        name:
          type: string
        email:
          type: string
        title:
          type: string
        description:
          type: string
        createdDate:
          type: string
          format: date-time
        user:
          $ref: '#/components/schemas/User'
        application:
          $ref: '#/components/schemas/Application'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelComment:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            comments:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelComment'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelDatabaseConnection:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            connections:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelDatabaseConnection'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelCartographyParameter:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        format:
          type: string
        type:
          type: string
        cartography:
          $ref: '#/components/schemas/Cartography'
        order:
          minimum: 0
          type: integer
          format: int32
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelCartographyParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-parameters:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCartographyParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelApplicationBackground:
      type: object
      properties:
        id:
          type: integer
          format: int32
        application:
          $ref: '#/components/schemas/Application'
        background:
          $ref: '#/components/schemas/Background'
        order:
          type: integer
          format: int32
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelApplicationBackground:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            application-backgrounds:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelApplicationBackground'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelBackground:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        image:
          type: string
        description:
          type: string
        active:
          type: boolean
        createdDate:
          type: string
          format: date-time
        cartographyGroup:
          $ref: '#/components/schemas/CartographyPermission'
        backgrounds:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/ApplicationBackground'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTerritory:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            territories:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTerritory'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTerritoryGroupType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelTerritory:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            territories:
              type: array
              items:
                $ref: '#/components/schemas/Territory'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelTaskAvailability:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            task-availabilities:
              type: array
              items:
                $ref: '#/components/schemas/TaskAvailability'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    ConfigurationParameter:
      required:
        - name
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
    EntityModelConfigurationParameter:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelConfigurationParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            configuration-parameters:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelConfigurationParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CodeListValue:
      required:
        - codeListName
        - value
      type: object
      properties:
        id:
          type: integer
          format: int32
        codeListName:
          type: string
        value:
          type: string
        system:
          type: boolean
        description:
          type: string
    EntityModelCodeListValue:
      type: object
      properties:
        id:
          type: integer
          format: int32
        codeListName:
          type: string
        value:
          type: string
        system:
          type: boolean
        description:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelCodeListValue:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            codelist-values:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCodeListValue'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelCodeListValue:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            codelist-values:
              type: array
              items:
                $ref: '#/components/schemas/CodeListValue'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelBackground:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            backgrounds:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelBackground'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTerritoryGroupType:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            territory-group-types:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTerritoryGroupType'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelCartographyPermission:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            cartography-groups:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelCartographyPermission'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelBackground:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            backgrounds:
              type: array
              items:
                $ref: '#/components/schemas/Background'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelService:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            services:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelService'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelServiceParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            service-parameters:
              type: array
              items:
                $ref: '#/components/schemas/ServiceParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTaskType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        title:
          type: string
        enabled:
          type: boolean
        parent:
          $ref: '#/components/schemas/TaskType'
        order:
          type: integer
          format: int32
        children:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/TaskType'
        specification:
          type: object
          additionalProperties:
            type: object
        folder:
          type: boolean
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTaskType:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            task-types:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTaskType'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelTaskType:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            task-types:
              type: array
              items:
                $ref: '#/components/schemas/TaskType'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTask:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            tasks:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTask'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelTaskUI:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        tooltip:
          type: string
        order:
          minimum: 0
          type: integer
          format: int32
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    Language:
      required:
        - name
        - shortname
      type: object
      properties:
        id:
          type: integer
          format: int32
        shortname:
          type: string
        name:
          type: string
    Translation:
      required:
        - column
        - element
        - language
        - translation
      type: object
      properties:
        id:
          type: integer
          format: int32
        element:
          type: integer
          format: int32
        column:
          type: string
        language:
          $ref: '#/components/schemas/Language'
        translation:
          type: string
    EntityModelTranslation:
      type: object
      properties:
        id:
          type: integer
          format: int32
        element:
          type: integer
          format: int32
        column:
          type: string
        language:
          $ref: '#/components/schemas/Language'
        translation:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTranslation:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            translations:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTranslation'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelLanguage:
      type: object
      properties:
        id:
          type: integer
          format: int32
        shortname:
          type: string
        name:
          type: string
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelTranslation:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            translations:
              type: array
              items:
                $ref: '#/components/schemas/Translation'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTaskUI:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            task-uis:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTaskUI'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTree:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            trees:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTree'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelLanguage:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            languages:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelLanguage'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    QueryTask:
      type: object
      properties:
        id:
          type: integer
          format: int32
        command:
          type: string
        scope:
          type: string
        description:
          type: string
        reportTask:
          $ref: '#/components/schemas/Task'
    EntityModelQueryTask:
      type: object
      properties:
        id:
          type: integer
          format: int32
        command:
          type: string
        scope:
          type: string
        description:
          type: string
        reportTask:
          $ref: '#/components/schemas/Task'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelQueryTask:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            queryTasks:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelQueryTask'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelUserPosition:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        organization:
          type: string
        email:
          type: string
        createdDate:
          type: string
          format: date-time
        expirationDate:
          type: string
          format: date-time
        type:
          type: string
        user:
          $ref: '#/components/schemas/User'
        territory:
          $ref: '#/components/schemas/Territory'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelUserPosition:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            user-positions:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelUserPosition'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    EntityModelApplicationParameter:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
        value:
          type: string
        type:
          type: string
        application:
          $ref: '#/components/schemas/Application'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelApplicationParameter:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            application-parameters:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelApplicationParameter'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
    CollectionModelEntityModelTerritoryType:
      type: object
      properties:
        _embedded:
          type: object
          properties:
            territory-types:
              type: array
              items:
                $ref: '#/components/schemas/EntityModelTerritoryType'
        _links:
          type: array
          items:
            $ref: '#/components/schemas/Link'
  securitySchemes:
    bearerAuth:
      type: http
      name: bearerAuth
      scheme: bearer
      bearerFormat: JWT
