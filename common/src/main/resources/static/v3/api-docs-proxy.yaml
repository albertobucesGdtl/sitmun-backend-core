openapi: 3.0.3

servers:
  - url: http://localhost:8090
    description: Servidor local de desarrollo

info:
  title: SITMUN 3 - API de Proxy
  description: |-
    La **API de Proxy** permite acceder a los visores de mapas a servicios remotos y bases de datos.

    Los **visores de mapas** pueden autenticarse usando un esquema de *autenticación por portador* 
    (*[Bearer authentication](https://swagger.io/docs/specification/authentication/bearer-authentication/)*) 
    usando un token que se ha obtenido previamente mediante la **API de Autenticación**. 
    Si no se autentica, se asume que la petición se ha realizado por un usuario 
    que en el dominio de SITMUN se denomina *usuario público*.

    ---

    **Esta API se documenta aquí por conveniencia ya que está implementada en otro componente.**
    
    ---

  license:
    name: EUPL 1.2
    url: https://raw.githubusercontent.com/sitmun/sitmun-backend-core/master/LICENSE
  version: 0.8.0
  contact:
    name: Comité técnico SITMUN  
    url: https://sitmun.github.io/contacto/

tags:
  - name: Proxy
    description: API del Proxy.

paths:

  /proxy/{appId}/{terId}/{type}/{typeId}:
    get:
      tags:
        - Proxy
      summary: Accede a un servicio remoto o base de datos a través del proxy.
      description: |- 
        Las coordenadas que identifican el servicio remoto son:
        
        - `appId` que identifica una aplicación de SITMUN.
        - `terrId` que identifica un territorio.
        - `type` que identifica el tipo de servicio. 
        - `typeId` que identifica el servicio.
        
        La petición que recibe aquí el proxy debe ser conforme al protocolo que se utilizaría
        si se hiciera una petición HTTP GET a un servicio de tipo de servicio soportado por 
        SITMUN identificado por `type`.
        
        La petición pueden autenticarse usando un esquema de *autenticación por portador*
        (*[Bearer authentication](https://swagger.io/docs/specification/authentication/bearer-authentication/)*)
        usando un token que se ha obtenido previamente mediante la **API de Autenticación**.
        Si no se autentica, se asume que la petición se ha realizado por un usuario
        que en el dominio de SITMUN se denomina *usuario público*.

      operationId: proxyGet
      parameters:
        - $ref: '#/components/parameters/appIdParam'
        - $ref: '#/components/parameters/terIdParam'
        - $ref: '#/components/parameters/typeParam'
        - $ref: '#/components/parameters/typeIdParam'
        - $ref: '#/components/parameters/queryParams'
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Se devuelve la respuesta del servicio remoto.
    post:
      tags:
        - Proxy
      summary: Accede a un servicio remoto o base de datos a través del proxy.
      description: |-
        Las coordenadas que identifican el servicio remoto son:
        
        - `appId` que identifica una aplicación de SITMUN.
        - `terrId` que identifica un territorio.
        - `type` que identifica el tipo de servicio. 
        - `typeId` que identifica el servicio.
        
        La petición que recibe aquí el proxy debe ser conforme al protocolo que se utilizaría
        si se hiciera una petición HTTP GET a un servicio de tipo de servicio soportado por 
        SITMUN identificado por `type`.
        
        La petición pueden autenticarse usando un esquema de *autenticación por portador*
        (*[Bearer authentication](https://swagger.io/docs/specification/authentication/bearer-authentication/)*)
        usando un token que se ha obtenido previamente mediante la **API de Autenticación**.
        Si no se autentica, se asume que la petición se ha realizado por un usuario
        que en el dominio de SITMUN se denomina *usuario público*.

      operationId: proxyPost
      parameters:
        - $ref: '#/components/parameters/appIdParam'
        - $ref: '#/components/parameters/terIdParam'
        - $ref: '#/components/parameters/typeParam'
        - $ref: '#/components/parameters/typeIdParam'
        - $ref: '#/components/parameters/queryParams'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: true

      security:
        - bearerAuth: []
      responses:
        '200':
          description: Se devuelve la respuesta del servicio remoto.

components:


  #-------------------------------
  # Parámetros de operación reutilizables
  #-------------------------------
  parameters:
    appIdParam:
      in: path
      name: appId
      schema:
        type: string
      required: true
      description: Identificador de la aplicación.
    terIdParam:
      in: path
      name: terId
      schema:
        type: string
      required: true
      description: Identificador del territorio.
    typeParam:
      in: path
      name: type
      schema:
        type: string
      required: true
      description: Identificador del tipo de servicio.
    typeIdParam:
      in: path
      name: typeId
      schema:
        type: string
      required: true
      description: Identificador del servicio.
    queryParams:
      name: params
      in: query
      schema:
        type: object
        additionalProperties: true

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT



