////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Project deploy heroku-dev-lite
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////


import org.apache.tools.ant.taskdefs.condition.Os
import org.springframework.boot.gradle.plugin.SpringBootPlugin

plugins {
  id 'java'
  id 'org.springframework.boot'
  id 'io.spring.dependency-management'

  id 'org.liquibase.gradle'
  id 'com.google.cloud.tools.jib'
}

dependencyManagement {
  imports {
    mavenBom SpringBootPlugin.BOM_COORDINATES
  }
}

ext {
  mainUrl = 'jdbc:oracle:thin:@//localhost:32768/FREE'
  mainUsername = 'c##stm3'
  mainPassword = 'stm3'
}

dependencies {

  implementation project(':common')
  implementation 'org.postgresql:postgresql'
  implementation 'com.oracle.database.jdbc:ojdbc8'

  liquibaseRuntime 'org.liquibase:liquibase-core:4.16.1'
  liquibaseRuntime 'org.liquibase:liquibase-groovy-dsl:3.0.2'
  liquibaseRuntime 'info.picocli:picocli:4.6.1'
  liquibaseRuntime 'org.postgresql:postgresql'
  liquibaseRuntime 'com.oracle.database.jdbc:ojdbc8'
}

liquibase {
  activities {
    main {
      changelogFile 'deploy/preprod/src/main/db/main.xml'
      url project.ext.mainUrl
      username project.ext.mainUsername
      password project.ext.mainPassword
      logLevel 'info'
    }
  }
}

jib {
  from {
    if (Os.isArch("aarch64")) {
      image = 'arm64v8/amazoncorretto:11'
    } else {
      image = 'amazoncorretto:11'
    }
  }
  to {
    image = "${name}:latest"
  }
  container {
    mainClass = 'org.sitmun.Application'
  }
}

springBoot {
  getMainClass().set("org.sitmun.Application")
}

bootJar {
  archiveFileName = "sitmun-backend-${archiveVersion.get()}.jar"
}